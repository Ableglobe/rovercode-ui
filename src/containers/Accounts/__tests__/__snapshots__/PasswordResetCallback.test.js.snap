// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PasswordResetCallback renders on the page with no errors 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <PasswordResetCallback
    match={
      Object {
        "params": Object {
          "token": "123",
          "uid": "ABC",
        },
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        null,
        <Grid
          centered={true}
          columns={16}
        >
          <GridRow>
            <Header
              size="huge"
            >
              Reset Password
            </Header>
          </GridRow>
          <GridRow>
            <p>
              Enter a new password for your account below.
            </p>
          </GridRow>
          <GridRow>
            <GridColumn
              width={4}
            >
              <Segment
                raised={true}
                secondary={true}
              >
                <Form
                  as="form"
                  floated="left"
                  onSubmit={[Function]}
                >
                  <FormInput
                    as={[Function]}
                    control={[Function]}
                    error={null}
                    icon="lock"
                    iconPosition="left"
                    onChange={[Function]}
                    placeholder="Password"
                    required={true}
                    type="password"
                  />
                  <FormInput
                    as={[Function]}
                    control={[Function]}
                    error={null}
                    icon="lock"
                    iconPosition="left"
                    onChange={[Function]}
                    placeholder="Password"
                    required={true}
                    type="password"
                  />
                  <FormButton
                    as={[Function]}
                    control={[Function]}
                    primary={true}
                    type="submit"
                  >
                    Set Password
                  </FormButton>
                </Form>
              </Segment>
            </GridColumn>
          </GridRow>
        </Grid>,
      ],
    },
    "ref": null,
    "rendered": Array [
      null,
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "centered": true,
          "children": Array [
            <GridRow>
              <Header
                size="huge"
              >
                Reset Password
              </Header>
            </GridRow>,
            <GridRow>
              <p>
                Enter a new password for your account below.
              </p>
            </GridRow>,
            null,
            <GridRow>
              <GridColumn
                width={4}
              >
                <Segment
                  raised={true}
                  secondary={true}
                >
                  <Form
                    as="form"
                    floated="left"
                    onSubmit={[Function]}
                  >
                    <FormInput
                      as={[Function]}
                      control={[Function]}
                      error={null}
                      icon="lock"
                      iconPosition="left"
                      onChange={[Function]}
                      placeholder="Password"
                      required={true}
                      type="password"
                    />
                    <FormInput
                      as={[Function]}
                      control={[Function]}
                      error={null}
                      icon="lock"
                      iconPosition="left"
                      onChange={[Function]}
                      placeholder="Password"
                      required={true}
                      type="password"
                    />
                    <FormButton
                      as={[Function]}
                      control={[Function]}
                      primary={true}
                      type="submit"
                    >
                      Set Password
                    </FormButton>
                  </Form>
                </Segment>
              </GridColumn>
            </GridRow>,
          ],
          "columns": 16,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": <Header
                size="huge"
              >
                Reset Password
              </Header>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": "Reset Password",
                "size": "huge",
              },
              "ref": null,
              "rendered": "Reset Password",
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": <p>
                Enter a new password for your account below.
              </p>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Enter a new password for your account below.",
              },
              "ref": null,
              "rendered": "Enter a new password for your account below.",
              "type": "p",
            },
            "type": [Function],
          },
          null,
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": <GridColumn
                width={4}
              >
                <Segment
                  raised={true}
                  secondary={true}
                >
                  <Form
                    as="form"
                    floated="left"
                    onSubmit={[Function]}
                  >
                    <FormInput
                      as={[Function]}
                      control={[Function]}
                      error={null}
                      icon="lock"
                      iconPosition="left"
                      onChange={[Function]}
                      placeholder="Password"
                      required={true}
                      type="password"
                    />
                    <FormInput
                      as={[Function]}
                      control={[Function]}
                      error={null}
                      icon="lock"
                      iconPosition="left"
                      onChange={[Function]}
                      placeholder="Password"
                      required={true}
                      type="password"
                    />
                    <FormButton
                      as={[Function]}
                      control={[Function]}
                      primary={true}
                      type="submit"
                    >
                      Set Password
                    </FormButton>
                  </Form>
                </Segment>
              </GridColumn>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": <Segment
                  raised={true}
                  secondary={true}
                >
                  <Form
                    as="form"
                    floated="left"
                    onSubmit={[Function]}
                  >
                    <FormInput
                      as={[Function]}
                      control={[Function]}
                      error={null}
                      icon="lock"
                      iconPosition="left"
                      onChange={[Function]}
                      placeholder="Password"
                      required={true}
                      type="password"
                    />
                    <FormInput
                      as={[Function]}
                      control={[Function]}
                      error={null}
                      icon="lock"
                      iconPosition="left"
                      onChange={[Function]}
                      placeholder="Password"
                      required={true}
                      type="password"
                    />
                    <FormButton
                      as={[Function]}
                      control={[Function]}
                      primary={true}
                      type="submit"
                    >
                      Set Password
                    </FormButton>
                  </Form>
                </Segment>,
                "width": 4,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": <Form
                    as="form"
                    floated="left"
                    onSubmit={[Function]}
                  >
                    <FormInput
                      as={[Function]}
                      control={[Function]}
                      error={null}
                      icon="lock"
                      iconPosition="left"
                      onChange={[Function]}
                      placeholder="Password"
                      required={true}
                      type="password"
                    />
                    <FormInput
                      as={[Function]}
                      control={[Function]}
                      error={null}
                      icon="lock"
                      iconPosition="left"
                      onChange={[Function]}
                      placeholder="Password"
                      required={true}
                      type="password"
                    />
                    <FormButton
                      as={[Function]}
                      control={[Function]}
                      primary={true}
                      type="submit"
                    >
                      Set Password
                    </FormButton>
                  </Form>,
                  "raised": true,
                  "secondary": true,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "as": "form",
                    "children": Array [
                      <FormInput
                        as={[Function]}
                        control={[Function]}
                        error={null}
                        icon="lock"
                        iconPosition="left"
                        onChange={[Function]}
                        placeholder="Password"
                        required={true}
                        type="password"
                      />,
                      <FormInput
                        as={[Function]}
                        control={[Function]}
                        error={null}
                        icon="lock"
                        iconPosition="left"
                        onChange={[Function]}
                        placeholder="Password"
                        required={true}
                        type="password"
                      />,
                      <FormButton
                        as={[Function]}
                        control={[Function]}
                        primary={true}
                        type="submit"
                      >
                        Set Password
                      </FormButton>,
                    ],
                    "floated": "left",
                    "onSubmit": [Function],
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "as": [Function],
                        "control": [Function],
                        "error": null,
                        "icon": "lock",
                        "iconPosition": "left",
                        "onChange": [Function],
                        "placeholder": "Password",
                        "required": true,
                        "type": "password",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "as": [Function],
                        "control": [Function],
                        "error": null,
                        "icon": "lock",
                        "iconPosition": "left",
                        "onChange": [Function],
                        "placeholder": "Password",
                        "required": true,
                        "type": "password",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "as": [Function],
                        "children": "Set Password",
                        "control": [Function],
                        "primary": true,
                        "type": "submit",
                      },
                      "ref": null,
                      "rendered": "Set Password",
                      "type": [Function],
                    },
                  ],
                  "type": [Function],
                },
                "type": [Function],
              },
              "type": [Function],
            },
            "type": [Function],
          },
        ],
        "type": [Function],
      },
    ],
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          null,
          <Grid
            centered={true}
            columns={16}
          >
            <GridRow>
              <Header
                size="huge"
              >
                Reset Password
              </Header>
            </GridRow>
            <GridRow>
              <p>
                Enter a new password for your account below.
              </p>
            </GridRow>
            <GridRow>
              <GridColumn
                width={4}
              >
                <Segment
                  raised={true}
                  secondary={true}
                >
                  <Form
                    as="form"
                    floated="left"
                    onSubmit={[Function]}
                  >
                    <FormInput
                      as={[Function]}
                      control={[Function]}
                      error={null}
                      icon="lock"
                      iconPosition="left"
                      onChange={[Function]}
                      placeholder="Password"
                      required={true}
                      type="password"
                    />
                    <FormInput
                      as={[Function]}
                      control={[Function]}
                      error={null}
                      icon="lock"
                      iconPosition="left"
                      onChange={[Function]}
                      placeholder="Password"
                      required={true}
                      type="password"
                    />
                    <FormButton
                      as={[Function]}
                      control={[Function]}
                      primary={true}
                      type="submit"
                    >
                      Set Password
                    </FormButton>
                  </Form>
                </Segment>
              </GridColumn>
            </GridRow>
          </Grid>,
        ],
      },
      "ref": null,
      "rendered": Array [
        null,
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "centered": true,
            "children": Array [
              <GridRow>
                <Header
                  size="huge"
                >
                  Reset Password
                </Header>
              </GridRow>,
              <GridRow>
                <p>
                  Enter a new password for your account below.
                </p>
              </GridRow>,
              null,
              <GridRow>
                <GridColumn
                  width={4}
                >
                  <Segment
                    raised={true}
                    secondary={true}
                  >
                    <Form
                      as="form"
                      floated="left"
                      onSubmit={[Function]}
                    >
                      <FormInput
                        as={[Function]}
                        control={[Function]}
                        error={null}
                        icon="lock"
                        iconPosition="left"
                        onChange={[Function]}
                        placeholder="Password"
                        required={true}
                        type="password"
                      />
                      <FormInput
                        as={[Function]}
                        control={[Function]}
                        error={null}
                        icon="lock"
                        iconPosition="left"
                        onChange={[Function]}
                        placeholder="Password"
                        required={true}
                        type="password"
                      />
                      <FormButton
                        as={[Function]}
                        control={[Function]}
                        primary={true}
                        type="submit"
                      >
                        Set Password
                      </FormButton>
                    </Form>
                  </Segment>
                </GridColumn>
              </GridRow>,
            ],
            "columns": 16,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": <Header
                  size="huge"
                >
                  Reset Password
                </Header>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": "Reset Password",
                  "size": "huge",
                },
                "ref": null,
                "rendered": "Reset Password",
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": <p>
                  Enter a new password for your account below.
                </p>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Enter a new password for your account below.",
                },
                "ref": null,
                "rendered": "Enter a new password for your account below.",
                "type": "p",
              },
              "type": [Function],
            },
            null,
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": <GridColumn
                  width={4}
                >
                  <Segment
                    raised={true}
                    secondary={true}
                  >
                    <Form
                      as="form"
                      floated="left"
                      onSubmit={[Function]}
                    >
                      <FormInput
                        as={[Function]}
                        control={[Function]}
                        error={null}
                        icon="lock"
                        iconPosition="left"
                        onChange={[Function]}
                        placeholder="Password"
                        required={true}
                        type="password"
                      />
                      <FormInput
                        as={[Function]}
                        control={[Function]}
                        error={null}
                        icon="lock"
                        iconPosition="left"
                        onChange={[Function]}
                        placeholder="Password"
                        required={true}
                        type="password"
                      />
                      <FormButton
                        as={[Function]}
                        control={[Function]}
                        primary={true}
                        type="submit"
                      >
                        Set Password
                      </FormButton>
                    </Form>
                  </Segment>
                </GridColumn>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": <Segment
                    raised={true}
                    secondary={true}
                  >
                    <Form
                      as="form"
                      floated="left"
                      onSubmit={[Function]}
                    >
                      <FormInput
                        as={[Function]}
                        control={[Function]}
                        error={null}
                        icon="lock"
                        iconPosition="left"
                        onChange={[Function]}
                        placeholder="Password"
                        required={true}
                        type="password"
                      />
                      <FormInput
                        as={[Function]}
                        control={[Function]}
                        error={null}
                        icon="lock"
                        iconPosition="left"
                        onChange={[Function]}
                        placeholder="Password"
                        required={true}
                        type="password"
                      />
                      <FormButton
                        as={[Function]}
                        control={[Function]}
                        primary={true}
                        type="submit"
                      >
                        Set Password
                      </FormButton>
                    </Form>
                  </Segment>,
                  "width": 4,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "children": <Form
                      as="form"
                      floated="left"
                      onSubmit={[Function]}
                    >
                      <FormInput
                        as={[Function]}
                        control={[Function]}
                        error={null}
                        icon="lock"
                        iconPosition="left"
                        onChange={[Function]}
                        placeholder="Password"
                        required={true}
                        type="password"
                      />
                      <FormInput
                        as={[Function]}
                        control={[Function]}
                        error={null}
                        icon="lock"
                        iconPosition="left"
                        onChange={[Function]}
                        placeholder="Password"
                        required={true}
                        type="password"
                      />
                      <FormButton
                        as={[Function]}
                        control={[Function]}
                        primary={true}
                        type="submit"
                      >
                        Set Password
                      </FormButton>
                    </Form>,
                    "raised": true,
                    "secondary": true,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "as": "form",
                      "children": Array [
                        <FormInput
                          as={[Function]}
                          control={[Function]}
                          error={null}
                          icon="lock"
                          iconPosition="left"
                          onChange={[Function]}
                          placeholder="Password"
                          required={true}
                          type="password"
                        />,
                        <FormInput
                          as={[Function]}
                          control={[Function]}
                          error={null}
                          icon="lock"
                          iconPosition="left"
                          onChange={[Function]}
                          placeholder="Password"
                          required={true}
                          type="password"
                        />,
                        <FormButton
                          as={[Function]}
                          control={[Function]}
                          primary={true}
                          type="submit"
                        >
                          Set Password
                        </FormButton>,
                      ],
                      "floated": "left",
                      "onSubmit": [Function],
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "function",
                        "props": Object {
                          "as": [Function],
                          "control": [Function],
                          "error": null,
                          "icon": "lock",
                          "iconPosition": "left",
                          "onChange": [Function],
                          "placeholder": "Password",
                          "required": true,
                          "type": "password",
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "function",
                        "props": Object {
                          "as": [Function],
                          "control": [Function],
                          "error": null,
                          "icon": "lock",
                          "iconPosition": "left",
                          "onChange": [Function],
                          "placeholder": "Password",
                          "required": true,
                          "type": "password",
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "function",
                        "props": Object {
                          "as": [Function],
                          "children": "Set Password",
                          "control": [Function],
                          "primary": true,
                          "type": "submit",
                        },
                        "ref": null,
                        "rendered": "Set Password",
                        "type": [Function],
                      },
                    ],
                    "type": [Function],
                  },
                  "type": [Function],
                },
                "type": [Function],
              },
              "type": [Function],
            },
          ],
          "type": [Function],
        },
      ],
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
