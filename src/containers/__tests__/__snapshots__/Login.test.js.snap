// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Login renders on the page with no errors 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Login
    location={
      Object {
        "pathname": "/login",
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": <Grid
        centered={true}
        columns="equal"
      >
        <GridRow>
          <Image
            as="img"
            src={Object {}}
            ui={true}
          />
        </GridRow>
        <GridRow>
          <p>
            You can sign up / sign in with one of your existing third-party accounts.
          </p>
        </GridRow>
        <GridRow>
          <GridColumn>
            <Button
              as="button"
              color="red"
              floated="right"
              id="google"
              onClick={[Function]}
              role="button"
            >
              <Icon
                as="i"
                name="google"
              />
              Sign in with Google
            </Button>
          </GridColumn>
          <GridColumn>
            <Button
              as="button"
              color="black"
              floated="left"
              id="github"
              onClick={[Function]}
              role="button"
            >
              <Icon
                as="i"
                name="github"
              />
              Sign in with GitHub
            </Button>
          </GridColumn>
        </GridRow>
      </Grid>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "centered": true,
        "children": Array [
          <GridRow>
            <Image
              as="img"
              src={Object {}}
              ui={true}
            />
          </GridRow>,
          <GridRow>
            <p>
              You can sign up / sign in with one of your existing third-party accounts.
            </p>
          </GridRow>,
          null,
          <GridRow>
            <GridColumn>
              <Button
                as="button"
                color="red"
                floated="right"
                id="google"
                onClick={[Function]}
                role="button"
              >
                <Icon
                  as="i"
                  name="google"
                />
                Sign in with Google
              </Button>
            </GridColumn>
            <GridColumn>
              <Button
                as="button"
                color="black"
                floated="left"
                id="github"
                onClick={[Function]}
                role="button"
              >
                <Icon
                  as="i"
                  name="github"
                />
                Sign in with GitHub
              </Button>
            </GridColumn>
          </GridRow>,
        ],
        "columns": "equal",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <Image
              as="img"
              src={Object {}}
              ui={true}
            />,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "as": "img",
              "src": Object {},
              "ui": true,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <p>
              You can sign up / sign in with one of your existing third-party accounts.
            </p>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "You can sign up / sign in with one of your existing third-party accounts.",
            },
            "ref": null,
            "rendered": "You can sign up / sign in with one of your existing third-party accounts.",
            "type": "p",
          },
          "type": [Function],
        },
        null,
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <GridColumn>
                <Button
                  as="button"
                  color="red"
                  floated="right"
                  id="google"
                  onClick={[Function]}
                  role="button"
                >
                  <Icon
                    as="i"
                    name="google"
                  />
                  Sign in with Google
                </Button>
              </GridColumn>,
              <GridColumn>
                <Button
                  as="button"
                  color="black"
                  floated="left"
                  id="github"
                  onClick={[Function]}
                  role="button"
                >
                  <Icon
                    as="i"
                    name="github"
                  />
                  Sign in with GitHub
                </Button>
              </GridColumn>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": <Button
                  as="button"
                  color="red"
                  floated="right"
                  id="google"
                  onClick={[Function]}
                  role="button"
                >
                  <Icon
                    as="i"
                    name="google"
                  />
                  Sign in with Google
                </Button>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "as": "button",
                  "children": Array [
                    <Icon
                      as="i"
                      name="google"
                    />,
                    "Sign in with Google",
                  ],
                  "color": "red",
                  "floated": "right",
                  "id": "google",
                  "onClick": [Function],
                  "role": "button",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "as": "i",
                      "name": "google",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "Sign in with Google",
                ],
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": <Button
                  as="button"
                  color="black"
                  floated="left"
                  id="github"
                  onClick={[Function]}
                  role="button"
                >
                  <Icon
                    as="i"
                    name="github"
                  />
                  Sign in with GitHub
                </Button>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "as": "button",
                  "children": Array [
                    <Icon
                      as="i"
                      name="github"
                    />,
                    "Sign in with GitHub",
                  ],
                  "color": "black",
                  "floated": "left",
                  "id": "github",
                  "onClick": [Function],
                  "role": "button",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "as": "i",
                      "name": "github",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "Sign in with GitHub",
                ],
                "type": [Function],
              },
              "type": [Function],
            },
          ],
          "type": [Function],
        },
      ],
      "type": [Function],
    },
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": <Grid
          centered={true}
          columns="equal"
        >
          <GridRow>
            <Image
              as="img"
              src={Object {}}
              ui={true}
            />
          </GridRow>
          <GridRow>
            <p>
              You can sign up / sign in with one of your existing third-party accounts.
            </p>
          </GridRow>
          <GridRow>
            <GridColumn>
              <Button
                as="button"
                color="red"
                floated="right"
                id="google"
                onClick={[Function]}
                role="button"
              >
                <Icon
                  as="i"
                  name="google"
                />
                Sign in with Google
              </Button>
            </GridColumn>
            <GridColumn>
              <Button
                as="button"
                color="black"
                floated="left"
                id="github"
                onClick={[Function]}
                role="button"
              >
                <Icon
                  as="i"
                  name="github"
                />
                Sign in with GitHub
              </Button>
            </GridColumn>
          </GridRow>
        </Grid>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "centered": true,
          "children": Array [
            <GridRow>
              <Image
                as="img"
                src={Object {}}
                ui={true}
              />
            </GridRow>,
            <GridRow>
              <p>
                You can sign up / sign in with one of your existing third-party accounts.
              </p>
            </GridRow>,
            null,
            <GridRow>
              <GridColumn>
                <Button
                  as="button"
                  color="red"
                  floated="right"
                  id="google"
                  onClick={[Function]}
                  role="button"
                >
                  <Icon
                    as="i"
                    name="google"
                  />
                  Sign in with Google
                </Button>
              </GridColumn>
              <GridColumn>
                <Button
                  as="button"
                  color="black"
                  floated="left"
                  id="github"
                  onClick={[Function]}
                  role="button"
                >
                  <Icon
                    as="i"
                    name="github"
                  />
                  Sign in with GitHub
                </Button>
              </GridColumn>
            </GridRow>,
          ],
          "columns": "equal",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": <Image
                as="img"
                src={Object {}}
                ui={true}
              />,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "img",
                "src": Object {},
                "ui": true,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": <p>
                You can sign up / sign in with one of your existing third-party accounts.
              </p>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "You can sign up / sign in with one of your existing third-party accounts.",
              },
              "ref": null,
              "rendered": "You can sign up / sign in with one of your existing third-party accounts.",
              "type": "p",
            },
            "type": [Function],
          },
          null,
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": Array [
                <GridColumn>
                  <Button
                    as="button"
                    color="red"
                    floated="right"
                    id="google"
                    onClick={[Function]}
                    role="button"
                  >
                    <Icon
                      as="i"
                      name="google"
                    />
                    Sign in with Google
                  </Button>
                </GridColumn>,
                <GridColumn>
                  <Button
                    as="button"
                    color="black"
                    floated="left"
                    id="github"
                    onClick={[Function]}
                    role="button"
                  >
                    <Icon
                      as="i"
                      name="github"
                    />
                    Sign in with GitHub
                  </Button>
                </GridColumn>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": <Button
                    as="button"
                    color="red"
                    floated="right"
                    id="google"
                    onClick={[Function]}
                    role="button"
                  >
                    <Icon
                      as="i"
                      name="google"
                    />
                    Sign in with Google
                  </Button>,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "as": "button",
                    "children": Array [
                      <Icon
                        as="i"
                        name="google"
                      />,
                      "Sign in with Google",
                    ],
                    "color": "red",
                    "floated": "right",
                    "id": "google",
                    "onClick": [Function],
                    "role": "button",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "as": "i",
                        "name": "google",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    "Sign in with Google",
                  ],
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": <Button
                    as="button"
                    color="black"
                    floated="left"
                    id="github"
                    onClick={[Function]}
                    role="button"
                  >
                    <Icon
                      as="i"
                      name="github"
                    />
                    Sign in with GitHub
                  </Button>,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "as": "button",
                    "children": Array [
                      <Icon
                        as="i"
                        name="github"
                      />,
                      "Sign in with GitHub",
                    ],
                    "color": "black",
                    "floated": "left",
                    "id": "github",
                    "onClick": [Function],
                    "role": "button",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "as": "i",
                        "name": "github",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    "Sign in with GitHub",
                  ],
                  "type": [Function],
                },
                "type": [Function],
              },
            ],
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
