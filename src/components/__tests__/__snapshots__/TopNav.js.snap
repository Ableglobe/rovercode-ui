// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`The TopNav component should render on the page with no errors 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <TopNav
    userName="Dale Gribble"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <MenuItem
          as={[Function]}
          to="/"
        >
          <Image
            as="img"
            size="mini"
            src={Object {}}
            ui={true}
          />
        </MenuItem>,
        <MenuItem
          as={[Function]}
          to="/programs/create"
        >
          Create New Program
        </MenuItem>,
        <MenuItem
          as={[Function]}
          to="/explore"
        >
          Explore
        </MenuItem>,
        <MenuItem
          as={[Function]}
          to="/programs"
        >
          My Programs
        </MenuItem>,
        <MenuMenu
          position="right"
        >
          <Dropdown
            additionLabel="Add "
            additionPosition="top"
            closeOnBlur={true}
            deburr={false}
            icon="dropdown"
            item={true}
            minCharacters={1}
            noResultsMessage="No results found."
            openOnFocus={true}
            renderLabel={[Function]}
            searchInput="text"
            selectOnBlur={true}
            selectOnNavigation={true}
            text="Dale Gribble"
            wrapSelection={true}
          >
            <DropdownMenu>
              <DropdownItem
                as={[Function]}
                to="/rovers"
              >
                Rovers
              </DropdownItem>
              <DropdownItem
                as={[Function]}
                to="/accounts/settings"
              >
                Settings
              </DropdownItem>
              <DropdownDivider />
              <DropdownItem
                as={[Function]}
                to="/signout"
              >
                Signout
              </DropdownItem>
            </DropdownMenu>
          </Dropdown>
        </MenuMenu>,
      ],
      "color": "black",
      "inverted": true,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "as": [Function],
          "children": <Image
            as="img"
            size="mini"
            src={Object {}}
            ui={true}
          />,
          "to": "/",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "as": "img",
            "size": "mini",
            "src": Object {},
            "ui": true,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "as": [Function],
          "children": "Create New Program",
          "to": "/programs/create",
        },
        "ref": null,
        "rendered": "Create New Program",
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "as": [Function],
          "children": "Explore",
          "to": "/explore",
        },
        "ref": null,
        "rendered": "Explore",
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "as": [Function],
          "children": "My Programs",
          "to": "/programs",
        },
        "ref": null,
        "rendered": "My Programs",
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <Dropdown
            additionLabel="Add "
            additionPosition="top"
            closeOnBlur={true}
            deburr={false}
            icon="dropdown"
            item={true}
            minCharacters={1}
            noResultsMessage="No results found."
            openOnFocus={true}
            renderLabel={[Function]}
            searchInput="text"
            selectOnBlur={true}
            selectOnNavigation={true}
            text="Dale Gribble"
            wrapSelection={true}
          >
            <DropdownMenu>
              <DropdownItem
                as={[Function]}
                to="/rovers"
              >
                Rovers
              </DropdownItem>
              <DropdownItem
                as={[Function]}
                to="/accounts/settings"
              >
                Settings
              </DropdownItem>
              <DropdownDivider />
              <DropdownItem
                as={[Function]}
                to="/signout"
              >
                Signout
              </DropdownItem>
            </DropdownMenu>
          </Dropdown>,
          "position": "right",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "additionLabel": "Add ",
            "additionPosition": "top",
            "children": <DropdownMenu>
              <DropdownItem
                as={[Function]}
                to="/rovers"
              >
                Rovers
              </DropdownItem>
              <DropdownItem
                as={[Function]}
                to="/accounts/settings"
              >
                Settings
              </DropdownItem>
              <DropdownDivider />
              <DropdownItem
                as={[Function]}
                to="/signout"
              >
                Signout
              </DropdownItem>
            </DropdownMenu>,
            "closeOnBlur": true,
            "deburr": false,
            "icon": "dropdown",
            "item": true,
            "minCharacters": 1,
            "noResultsMessage": "No results found.",
            "openOnFocus": true,
            "renderLabel": [Function],
            "searchInput": "text",
            "selectOnBlur": true,
            "selectOnNavigation": true,
            "text": "Dale Gribble",
            "wrapSelection": true,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": Array [
                <DropdownItem
                  as={[Function]}
                  to="/rovers"
                >
                  Rovers
                </DropdownItem>,
                <DropdownItem
                  as={[Function]}
                  to="/accounts/settings"
                >
                  Settings
                </DropdownItem>,
                <DropdownDivider />,
                <DropdownItem
                  as={[Function]}
                  to="/signout"
                >
                  Signout
                </DropdownItem>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "as": [Function],
                  "children": "Rovers",
                  "to": "/rovers",
                },
                "ref": null,
                "rendered": "Rovers",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "as": [Function],
                  "children": "Settings",
                  "to": "/accounts/settings",
                },
                "ref": null,
                "rendered": "Settings",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "as": [Function],
                  "children": "Signout",
                  "to": "/signout",
                },
                "ref": null,
                "rendered": "Signout",
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          "type": [Function],
        },
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <MenuItem
            as={[Function]}
            to="/"
          >
            <Image
              as="img"
              size="mini"
              src={Object {}}
              ui={true}
            />
          </MenuItem>,
          <MenuItem
            as={[Function]}
            to="/programs/create"
          >
            Create New Program
          </MenuItem>,
          <MenuItem
            as={[Function]}
            to="/explore"
          >
            Explore
          </MenuItem>,
          <MenuItem
            as={[Function]}
            to="/programs"
          >
            My Programs
          </MenuItem>,
          <MenuMenu
            position="right"
          >
            <Dropdown
              additionLabel="Add "
              additionPosition="top"
              closeOnBlur={true}
              deburr={false}
              icon="dropdown"
              item={true}
              minCharacters={1}
              noResultsMessage="No results found."
              openOnFocus={true}
              renderLabel={[Function]}
              searchInput="text"
              selectOnBlur={true}
              selectOnNavigation={true}
              text="Dale Gribble"
              wrapSelection={true}
            >
              <DropdownMenu>
                <DropdownItem
                  as={[Function]}
                  to="/rovers"
                >
                  Rovers
                </DropdownItem>
                <DropdownItem
                  as={[Function]}
                  to="/accounts/settings"
                >
                  Settings
                </DropdownItem>
                <DropdownDivider />
                <DropdownItem
                  as={[Function]}
                  to="/signout"
                >
                  Signout
                </DropdownItem>
              </DropdownMenu>
            </Dropdown>
          </MenuMenu>,
        ],
        "color": "black",
        "inverted": true,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "as": [Function],
            "children": <Image
              as="img"
              size="mini"
              src={Object {}}
              ui={true}
            />,
            "to": "/",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "as": "img",
              "size": "mini",
              "src": Object {},
              "ui": true,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "as": [Function],
            "children": "Create New Program",
            "to": "/programs/create",
          },
          "ref": null,
          "rendered": "Create New Program",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "as": [Function],
            "children": "Explore",
            "to": "/explore",
          },
          "ref": null,
          "rendered": "Explore",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "as": [Function],
            "children": "My Programs",
            "to": "/programs",
          },
          "ref": null,
          "rendered": "My Programs",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <Dropdown
              additionLabel="Add "
              additionPosition="top"
              closeOnBlur={true}
              deburr={false}
              icon="dropdown"
              item={true}
              minCharacters={1}
              noResultsMessage="No results found."
              openOnFocus={true}
              renderLabel={[Function]}
              searchInput="text"
              selectOnBlur={true}
              selectOnNavigation={true}
              text="Dale Gribble"
              wrapSelection={true}
            >
              <DropdownMenu>
                <DropdownItem
                  as={[Function]}
                  to="/rovers"
                >
                  Rovers
                </DropdownItem>
                <DropdownItem
                  as={[Function]}
                  to="/accounts/settings"
                >
                  Settings
                </DropdownItem>
                <DropdownDivider />
                <DropdownItem
                  as={[Function]}
                  to="/signout"
                >
                  Signout
                </DropdownItem>
              </DropdownMenu>
            </Dropdown>,
            "position": "right",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "additionLabel": "Add ",
              "additionPosition": "top",
              "children": <DropdownMenu>
                <DropdownItem
                  as={[Function]}
                  to="/rovers"
                >
                  Rovers
                </DropdownItem>
                <DropdownItem
                  as={[Function]}
                  to="/accounts/settings"
                >
                  Settings
                </DropdownItem>
                <DropdownDivider />
                <DropdownItem
                  as={[Function]}
                  to="/signout"
                >
                  Signout
                </DropdownItem>
              </DropdownMenu>,
              "closeOnBlur": true,
              "deburr": false,
              "icon": "dropdown",
              "item": true,
              "minCharacters": 1,
              "noResultsMessage": "No results found.",
              "openOnFocus": true,
              "renderLabel": [Function],
              "searchInput": "text",
              "selectOnBlur": true,
              "selectOnNavigation": true,
              "text": "Dale Gribble",
              "wrapSelection": true,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": Array [
                  <DropdownItem
                    as={[Function]}
                    to="/rovers"
                  >
                    Rovers
                  </DropdownItem>,
                  <DropdownItem
                    as={[Function]}
                    to="/accounts/settings"
                  >
                    Settings
                  </DropdownItem>,
                  <DropdownDivider />,
                  <DropdownItem
                    as={[Function]}
                    to="/signout"
                  >
                    Signout
                  </DropdownItem>,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "as": [Function],
                    "children": "Rovers",
                    "to": "/rovers",
                  },
                  "ref": null,
                  "rendered": "Rovers",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "as": [Function],
                    "children": "Settings",
                    "to": "/accounts/settings",
                  },
                  "ref": null,
                  "rendered": "Settings",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {},
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "as": [Function],
                    "children": "Signout",
                    "to": "/signout",
                  },
                  "ref": null,
                  "rendered": "Signout",
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            "type": [Function],
          },
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
