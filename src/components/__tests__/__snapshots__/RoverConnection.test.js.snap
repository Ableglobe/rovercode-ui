// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`The RoverList component renders on the page with no errors 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <RoverConnection
    changeActiveRover={[MockFunction]}
    changeLeftSensorState={[MockFunction]}
    changeRightSensorState={[MockFunction]}
    clientId="1234"
    commands={Array []}
    isActive={true}
    name="Sparky"
    popCommand={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <Card
          color="blue"
          onClick={[Function]}
        >
          <CardContent>
            <Label
              corner="right"
              style={
                Object {
                  "borderColor": "white",
                }
              }
            >
              <Icon
                as="i"
                name="circle outline"
              />
            </Label>
            <CardHeader>
              Sparky
            </CardHeader>
            <CardMeta>
              Active
            </CardMeta>
          </CardContent>
        </Card>,
        <Websocket
          debug={false}
          onMessage={[Function]}
          reconnect={true}
          url="ws://localhost:8000/ws/realtime/1234/"
        />,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <CardContent>
            <Label
              corner="right"
              style={
                Object {
                  "borderColor": "white",
                }
              }
            >
              <Icon
                as="i"
                name="circle outline"
              />
            </Label>
            <CardHeader>
              Sparky
            </CardHeader>
            <CardMeta>
              Active
            </CardMeta>
          </CardContent>,
          "color": "blue",
          "onClick": [Function],
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <Label
                corner="right"
                style={
                  Object {
                    "borderColor": "white",
                  }
                }
              >
                <Icon
                  as="i"
                  name="circle outline"
                />
              </Label>,
              <CardHeader>
                Sparky
              </CardHeader>,
              <CardMeta>
                Active
              </CardMeta>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <Icon
                  as="i"
                  name="circle outline"
                />,
                "corner": "right",
                "style": Object {
                  "borderColor": "white",
                },
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "as": "i",
                  "name": "circle outline",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": "Sparky",
              },
              "ref": null,
              "rendered": "Sparky",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": "Active",
              },
              "ref": null,
              "rendered": "Active",
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "debug": false,
          "onMessage": [Function],
          "reconnect": true,
          "url": "ws://localhost:8000/ws/realtime/1234/",
        },
        "ref": [Function],
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <Card
            color="blue"
            onClick={[Function]}
          >
            <CardContent>
              <Label
                corner="right"
                style={
                  Object {
                    "borderColor": "white",
                  }
                }
              >
                <Icon
                  as="i"
                  name="circle outline"
                />
              </Label>
              <CardHeader>
                Sparky
              </CardHeader>
              <CardMeta>
                Active
              </CardMeta>
            </CardContent>
          </Card>,
          <Websocket
            debug={false}
            onMessage={[Function]}
            reconnect={true}
            url="ws://localhost:8000/ws/realtime/1234/"
          />,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <CardContent>
              <Label
                corner="right"
                style={
                  Object {
                    "borderColor": "white",
                  }
                }
              >
                <Icon
                  as="i"
                  name="circle outline"
                />
              </Label>
              <CardHeader>
                Sparky
              </CardHeader>
              <CardMeta>
                Active
              </CardMeta>
            </CardContent>,
            "color": "blue",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": Array [
                <Label
                  corner="right"
                  style={
                    Object {
                      "borderColor": "white",
                    }
                  }
                >
                  <Icon
                    as="i"
                    name="circle outline"
                  />
                </Label>,
                <CardHeader>
                  Sparky
                </CardHeader>,
                <CardMeta>
                  Active
                </CardMeta>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <Icon
                    as="i"
                    name="circle outline"
                  />,
                  "corner": "right",
                  "style": Object {
                    "borderColor": "white",
                  },
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "as": "i",
                    "name": "circle outline",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": "Sparky",
                },
                "ref": null,
                "rendered": "Sparky",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": "Active",
                },
                "ref": null,
                "rendered": "Active",
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "debug": false,
            "onMessage": [Function],
            "reconnect": true,
            "url": "ws://localhost:8000/ws/realtime/1234/",
          },
          "ref": [Function],
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;
