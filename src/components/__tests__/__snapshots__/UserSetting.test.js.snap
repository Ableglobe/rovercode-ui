// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`The UserSetting component renders on the page with no errors 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <UserSetting
    editUserPassword={[MockFunction]}
    editUserUsername={[MockFunction]}
    user={
      Object {
        "email": "test@example.com",
        "isSocial": false,
        "user_id": 1,
        "username": "testuser",
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "centered": true,
      "children": Array [
        <GridRow>
          <Header
            as="h1"
          >
            <Icon
              as="i"
              name="settings"
            />
            <HeaderContent>
              My Settings
            </HeaderContent>
          </Header>
        </GridRow>,
        <GridRow>
          <GridColumn
            width={5}
          >
            <React.Fragment>
              <Message
                info={true}
              >
                Changing any of these settings requires signing back in.
              </Message>
              <GridRow
                style={
                  Object {
                    "paddingBottom": "10px",
                    "paddingTop": "10px",
                  }
                }
              >
                <Segment
                  raised={true}
                >
                  <Header
                    dividing={true}
                  >
                    <Icon
                      as="i"
                      name="user"
                    />
                    <HeaderContent>
                      Change Username
                    </HeaderContent>
                  </Header>
                  <Form
                    as="form"
                    onSubmit={[Function]}
                  >
                    <FormInput
                      as={[Function]}
                      control={[Function]}
                      defaultValue="testuser"
                      error={null}
                      inline={true}
                      label="Username:"
                      name="username"
                      onChange={[Function]}
                      required={true}
                    />
                    <FormButton
                      as={[Function]}
                      control={[Function]}
                      primary={true}
                    >
                      Save
                    </FormButton>
                  </Form>
                </Segment>
              </GridRow>
              <GridRow>
                <Segment
                  raised={true}
                >
                  <Header
                    dividing={true}
                  >
                    <Icon
                      as="i"
                      name="lock"
                    />
                    <HeaderContent>
                      Change Password
                    </HeaderContent>
                  </Header>
                  <Form
                    as="form"
                    onSubmit={[Function]}
                  >
                    <FormGroup
                      widths="equal"
                    >
                      <FormInput
                        as={[Function]}
                        control={[Function]}
                        error={null}
                        label="New Password:"
                        name="password1"
                        onChange={[Function]}
                        required={true}
                        type="password"
                      />
                      <FormInput
                        as={[Function]}
                        control={[Function]}
                        error={null}
                        label="Verify:"
                        name="password2"
                        onChange={[Function]}
                        required={true}
                        type="password"
                      />
                    </FormGroup>
                    <FormButton
                      as={[Function]}
                      control={[Function]}
                      primary={true}
                    >
                      Save
                    </FormButton>
                  </Form>
                </Segment>
              </GridRow>
            </React.Fragment>
          </GridColumn>
        </GridRow>,
      ],
      "columns": 16,
      "divided": "vertically",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <Header
            as="h1"
          >
            <Icon
              as="i"
              name="settings"
            />
            <HeaderContent>
              My Settings
            </HeaderContent>
          </Header>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "as": "h1",
            "children": Array [
              <Icon
                as="i"
                name="settings"
              />,
              <HeaderContent>
                My Settings
              </HeaderContent>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "as": "i",
                "name": "settings",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": "My Settings",
              },
              "ref": null,
              "rendered": "My Settings",
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <GridColumn
            width={5}
          >
            <React.Fragment>
              <Message
                info={true}
              >
                Changing any of these settings requires signing back in.
              </Message>
              <GridRow
                style={
                  Object {
                    "paddingBottom": "10px",
                    "paddingTop": "10px",
                  }
                }
              >
                <Segment
                  raised={true}
                >
                  <Header
                    dividing={true}
                  >
                    <Icon
                      as="i"
                      name="user"
                    />
                    <HeaderContent>
                      Change Username
                    </HeaderContent>
                  </Header>
                  <Form
                    as="form"
                    onSubmit={[Function]}
                  >
                    <FormInput
                      as={[Function]}
                      control={[Function]}
                      defaultValue="testuser"
                      error={null}
                      inline={true}
                      label="Username:"
                      name="username"
                      onChange={[Function]}
                      required={true}
                    />
                    <FormButton
                      as={[Function]}
                      control={[Function]}
                      primary={true}
                    >
                      Save
                    </FormButton>
                  </Form>
                </Segment>
              </GridRow>
              <GridRow>
                <Segment
                  raised={true}
                >
                  <Header
                    dividing={true}
                  >
                    <Icon
                      as="i"
                      name="lock"
                    />
                    <HeaderContent>
                      Change Password
                    </HeaderContent>
                  </Header>
                  <Form
                    as="form"
                    onSubmit={[Function]}
                  >
                    <FormGroup
                      widths="equal"
                    >
                      <FormInput
                        as={[Function]}
                        control={[Function]}
                        error={null}
                        label="New Password:"
                        name="password1"
                        onChange={[Function]}
                        required={true}
                        type="password"
                      />
                      <FormInput
                        as={[Function]}
                        control={[Function]}
                        error={null}
                        label="Verify:"
                        name="password2"
                        onChange={[Function]}
                        required={true}
                        type="password"
                      />
                    </FormGroup>
                    <FormButton
                      as={[Function]}
                      control={[Function]}
                      primary={true}
                    >
                      Save
                    </FormButton>
                  </Form>
                </Segment>
              </GridRow>
            </React.Fragment>
          </GridColumn>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              null,
              <React.Fragment>
                <Message
                  info={true}
                >
                  Changing any of these settings requires signing back in.
                </Message>
                <GridRow
                  style={
                    Object {
                      "paddingBottom": "10px",
                      "paddingTop": "10px",
                    }
                  }
                >
                  <Segment
                    raised={true}
                  >
                    <Header
                      dividing={true}
                    >
                      <Icon
                        as="i"
                        name="user"
                      />
                      <HeaderContent>
                        Change Username
                      </HeaderContent>
                    </Header>
                    <Form
                      as="form"
                      onSubmit={[Function]}
                    >
                      <FormInput
                        as={[Function]}
                        control={[Function]}
                        defaultValue="testuser"
                        error={null}
                        inline={true}
                        label="Username:"
                        name="username"
                        onChange={[Function]}
                        required={true}
                      />
                      <FormButton
                        as={[Function]}
                        control={[Function]}
                        primary={true}
                      >
                        Save
                      </FormButton>
                    </Form>
                  </Segment>
                </GridRow>
                <GridRow>
                  <Segment
                    raised={true}
                  >
                    <Header
                      dividing={true}
                    >
                      <Icon
                        as="i"
                        name="lock"
                      />
                      <HeaderContent>
                        Change Password
                      </HeaderContent>
                    </Header>
                    <Form
                      as="form"
                      onSubmit={[Function]}
                    >
                      <FormGroup
                        widths="equal"
                      >
                        <FormInput
                          as={[Function]}
                          control={[Function]}
                          error={null}
                          label="New Password:"
                          name="password1"
                          onChange={[Function]}
                          required={true}
                          type="password"
                        />
                        <FormInput
                          as={[Function]}
                          control={[Function]}
                          error={null}
                          label="Verify:"
                          name="password2"
                          onChange={[Function]}
                          required={true}
                          type="password"
                        />
                      </FormGroup>
                      <FormButton
                        as={[Function]}
                        control={[Function]}
                        primary={true}
                      >
                        Save
                      </FormButton>
                    </Form>
                  </Segment>
                </GridRow>
              </React.Fragment>,
            ],
            "width": 5,
          },
          "ref": null,
          "rendered": Array [
            null,
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": Array [
                  <Message
                    info={true}
                  >
                    Changing any of these settings requires signing back in.
                  </Message>,
                  null,
                  <GridRow
                    style={
                      Object {
                        "paddingBottom": "10px",
                        "paddingTop": "10px",
                      }
                    }
                  >
                    <Segment
                      raised={true}
                    >
                      <Header
                        dividing={true}
                      >
                        <Icon
                          as="i"
                          name="user"
                        />
                        <HeaderContent>
                          Change Username
                        </HeaderContent>
                      </Header>
                      <Form
                        as="form"
                        onSubmit={[Function]}
                      >
                        <FormInput
                          as={[Function]}
                          control={[Function]}
                          defaultValue="testuser"
                          error={null}
                          inline={true}
                          label="Username:"
                          name="username"
                          onChange={[Function]}
                          required={true}
                        />
                        <FormButton
                          as={[Function]}
                          control={[Function]}
                          primary={true}
                        >
                          Save
                        </FormButton>
                      </Form>
                    </Segment>
                  </GridRow>,
                  <GridRow>
                    <Segment
                      raised={true}
                    >
                      <Header
                        dividing={true}
                      >
                        <Icon
                          as="i"
                          name="lock"
                        />
                        <HeaderContent>
                          Change Password
                        </HeaderContent>
                      </Header>
                      <Form
                        as="form"
                        onSubmit={[Function]}
                      >
                        <FormGroup
                          widths="equal"
                        >
                          <FormInput
                            as={[Function]}
                            control={[Function]}
                            error={null}
                            label="New Password:"
                            name="password1"
                            onChange={[Function]}
                            required={true}
                            type="password"
                          />
                          <FormInput
                            as={[Function]}
                            control={[Function]}
                            error={null}
                            label="Verify:"
                            name="password2"
                            onChange={[Function]}
                            required={true}
                            type="password"
                          />
                        </FormGroup>
                        <FormButton
                          as={[Function]}
                          control={[Function]}
                          primary={true}
                        >
                          Save
                        </FormButton>
                      </Form>
                    </Segment>
                  </GridRow>,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "Changing any of these settings requires signing back in.",
                    "info": true,
                  },
                  "ref": null,
                  "rendered": "Changing any of these settings requires signing back in.",
                  "type": [Function],
                },
                null,
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "children": <Segment
                      raised={true}
                    >
                      <Header
                        dividing={true}
                      >
                        <Icon
                          as="i"
                          name="user"
                        />
                        <HeaderContent>
                          Change Username
                        </HeaderContent>
                      </Header>
                      <Form
                        as="form"
                        onSubmit={[Function]}
                      >
                        <FormInput
                          as={[Function]}
                          control={[Function]}
                          defaultValue="testuser"
                          error={null}
                          inline={true}
                          label="Username:"
                          name="username"
                          onChange={[Function]}
                          required={true}
                        />
                        <FormButton
                          as={[Function]}
                          control={[Function]}
                          primary={true}
                        >
                          Save
                        </FormButton>
                      </Form>
                    </Segment>,
                    "style": Object {
                      "paddingBottom": "10px",
                      "paddingTop": "10px",
                    },
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "children": Array [
                        <Header
                          dividing={true}
                        >
                          <Icon
                            as="i"
                            name="user"
                          />
                          <HeaderContent>
                            Change Username
                          </HeaderContent>
                        </Header>,
                        <Form
                          as="form"
                          onSubmit={[Function]}
                        >
                          <FormInput
                            as={[Function]}
                            control={[Function]}
                            defaultValue="testuser"
                            error={null}
                            inline={true}
                            label="Username:"
                            name="username"
                            onChange={[Function]}
                            required={true}
                          />
                          <FormButton
                            as={[Function]}
                            control={[Function]}
                            primary={true}
                          >
                            Save
                          </FormButton>
                        </Form>,
                      ],
                      "raised": true,
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "function",
                        "props": Object {
                          "children": Array [
                            <Icon
                              as="i"
                              name="user"
                            />,
                            <HeaderContent>
                              Change Username
                            </HeaderContent>,
                          ],
                          "dividing": true,
                        },
                        "ref": null,
                        "rendered": Array [
                          Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "class",
                            "props": Object {
                              "as": "i",
                              "name": "user",
                            },
                            "ref": null,
                            "rendered": null,
                            "type": [Function],
                          },
                          Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "function",
                            "props": Object {
                              "children": "Change Username",
                            },
                            "ref": null,
                            "rendered": "Change Username",
                            "type": [Function],
                          },
                        ],
                        "type": [Function],
                      },
                      Object {
                        "instance": null,
                        "key": "1",
                        "nodeType": "class",
                        "props": Object {
                          "as": "form",
                          "children": Array [
                            <FormInput
                              as={[Function]}
                              control={[Function]}
                              defaultValue="testuser"
                              error={null}
                              inline={true}
                              label="Username:"
                              name="username"
                              onChange={[Function]}
                              required={true}
                            />,
                            <FormButton
                              as={[Function]}
                              control={[Function]}
                              primary={true}
                            >
                              Save
                            </FormButton>,
                          ],
                          "onSubmit": [Function],
                        },
                        "ref": null,
                        "rendered": Array [
                          Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "function",
                            "props": Object {
                              "as": [Function],
                              "control": [Function],
                              "defaultValue": "testuser",
                              "error": null,
                              "inline": true,
                              "label": "Username:",
                              "name": "username",
                              "onChange": [Function],
                              "required": true,
                            },
                            "ref": null,
                            "rendered": null,
                            "type": [Function],
                          },
                          Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "function",
                            "props": Object {
                              "as": [Function],
                              "children": "Save",
                              "control": [Function],
                              "primary": true,
                            },
                            "ref": null,
                            "rendered": "Save",
                            "type": [Function],
                          },
                        ],
                        "type": [Function],
                      },
                    ],
                    "type": [Function],
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "children": <Segment
                      raised={true}
                    >
                      <Header
                        dividing={true}
                      >
                        <Icon
                          as="i"
                          name="lock"
                        />
                        <HeaderContent>
                          Change Password
                        </HeaderContent>
                      </Header>
                      <Form
                        as="form"
                        onSubmit={[Function]}
                      >
                        <FormGroup
                          widths="equal"
                        >
                          <FormInput
                            as={[Function]}
                            control={[Function]}
                            error={null}
                            label="New Password:"
                            name="password1"
                            onChange={[Function]}
                            required={true}
                            type="password"
                          />
                          <FormInput
                            as={[Function]}
                            control={[Function]}
                            error={null}
                            label="Verify:"
                            name="password2"
                            onChange={[Function]}
                            required={true}
                            type="password"
                          />
                        </FormGroup>
                        <FormButton
                          as={[Function]}
                          control={[Function]}
                          primary={true}
                        >
                          Save
                        </FormButton>
                      </Form>
                    </Segment>,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "children": Array [
                        <Header
                          dividing={true}
                        >
                          <Icon
                            as="i"
                            name="lock"
                          />
                          <HeaderContent>
                            Change Password
                          </HeaderContent>
                        </Header>,
                        <Form
                          as="form"
                          onSubmit={[Function]}
                        >
                          <FormGroup
                            widths="equal"
                          >
                            <FormInput
                              as={[Function]}
                              control={[Function]}
                              error={null}
                              label="New Password:"
                              name="password1"
                              onChange={[Function]}
                              required={true}
                              type="password"
                            />
                            <FormInput
                              as={[Function]}
                              control={[Function]}
                              error={null}
                              label="Verify:"
                              name="password2"
                              onChange={[Function]}
                              required={true}
                              type="password"
                            />
                          </FormGroup>
                          <FormButton
                            as={[Function]}
                            control={[Function]}
                            primary={true}
                          >
                            Save
                          </FormButton>
                        </Form>,
                      ],
                      "raised": true,
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "function",
                        "props": Object {
                          "children": Array [
                            <Icon
                              as="i"
                              name="lock"
                            />,
                            <HeaderContent>
                              Change Password
                            </HeaderContent>,
                          ],
                          "dividing": true,
                        },
                        "ref": null,
                        "rendered": Array [
                          Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "class",
                            "props": Object {
                              "as": "i",
                              "name": "lock",
                            },
                            "ref": null,
                            "rendered": null,
                            "type": [Function],
                          },
                          Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "function",
                            "props": Object {
                              "children": "Change Password",
                            },
                            "ref": null,
                            "rendered": "Change Password",
                            "type": [Function],
                          },
                        ],
                        "type": [Function],
                      },
                      Object {
                        "instance": null,
                        "key": "1",
                        "nodeType": "class",
                        "props": Object {
                          "as": "form",
                          "children": Array [
                            <FormGroup
                              widths="equal"
                            >
                              <FormInput
                                as={[Function]}
                                control={[Function]}
                                error={null}
                                label="New Password:"
                                name="password1"
                                onChange={[Function]}
                                required={true}
                                type="password"
                              />
                              <FormInput
                                as={[Function]}
                                control={[Function]}
                                error={null}
                                label="Verify:"
                                name="password2"
                                onChange={[Function]}
                                required={true}
                                type="password"
                              />
                            </FormGroup>,
                            <FormButton
                              as={[Function]}
                              control={[Function]}
                              primary={true}
                            >
                              Save
                            </FormButton>,
                          ],
                          "onSubmit": [Function],
                        },
                        "ref": null,
                        "rendered": Array [
                          Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "function",
                            "props": Object {
                              "children": Array [
                                <FormInput
                                  as={[Function]}
                                  control={[Function]}
                                  error={null}
                                  label="New Password:"
                                  name="password1"
                                  onChange={[Function]}
                                  required={true}
                                  type="password"
                                />,
                                <FormInput
                                  as={[Function]}
                                  control={[Function]}
                                  error={null}
                                  label="Verify:"
                                  name="password2"
                                  onChange={[Function]}
                                  required={true}
                                  type="password"
                                />,
                              ],
                              "widths": "equal",
                            },
                            "ref": null,
                            "rendered": Array [
                              Object {
                                "instance": null,
                                "key": undefined,
                                "nodeType": "function",
                                "props": Object {
                                  "as": [Function],
                                  "control": [Function],
                                  "error": null,
                                  "label": "New Password:",
                                  "name": "password1",
                                  "onChange": [Function],
                                  "required": true,
                                  "type": "password",
                                },
                                "ref": null,
                                "rendered": null,
                                "type": [Function],
                              },
                              Object {
                                "instance": null,
                                "key": undefined,
                                "nodeType": "function",
                                "props": Object {
                                  "as": [Function],
                                  "control": [Function],
                                  "error": null,
                                  "label": "Verify:",
                                  "name": "password2",
                                  "onChange": [Function],
                                  "required": true,
                                  "type": "password",
                                },
                                "ref": null,
                                "rendered": null,
                                "type": [Function],
                              },
                            ],
                            "type": [Function],
                          },
                          Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "function",
                            "props": Object {
                              "as": [Function],
                              "children": "Save",
                              "control": [Function],
                              "primary": true,
                            },
                            "ref": null,
                            "rendered": "Save",
                            "type": [Function],
                          },
                        ],
                        "type": [Function],
                      },
                    ],
                    "type": [Function],
                  },
                  "type": [Function],
                },
              ],
              "type": Symbol(react.fragment),
            },
          ],
          "type": [Function],
        },
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "centered": true,
        "children": Array [
          <GridRow>
            <Header
              as="h1"
            >
              <Icon
                as="i"
                name="settings"
              />
              <HeaderContent>
                My Settings
              </HeaderContent>
            </Header>
          </GridRow>,
          <GridRow>
            <GridColumn
              width={5}
            >
              <React.Fragment>
                <Message
                  info={true}
                >
                  Changing any of these settings requires signing back in.
                </Message>
                <GridRow
                  style={
                    Object {
                      "paddingBottom": "10px",
                      "paddingTop": "10px",
                    }
                  }
                >
                  <Segment
                    raised={true}
                  >
                    <Header
                      dividing={true}
                    >
                      <Icon
                        as="i"
                        name="user"
                      />
                      <HeaderContent>
                        Change Username
                      </HeaderContent>
                    </Header>
                    <Form
                      as="form"
                      onSubmit={[Function]}
                    >
                      <FormInput
                        as={[Function]}
                        control={[Function]}
                        defaultValue="testuser"
                        error={null}
                        inline={true}
                        label="Username:"
                        name="username"
                        onChange={[Function]}
                        required={true}
                      />
                      <FormButton
                        as={[Function]}
                        control={[Function]}
                        primary={true}
                      >
                        Save
                      </FormButton>
                    </Form>
                  </Segment>
                </GridRow>
                <GridRow>
                  <Segment
                    raised={true}
                  >
                    <Header
                      dividing={true}
                    >
                      <Icon
                        as="i"
                        name="lock"
                      />
                      <HeaderContent>
                        Change Password
                      </HeaderContent>
                    </Header>
                    <Form
                      as="form"
                      onSubmit={[Function]}
                    >
                      <FormGroup
                        widths="equal"
                      >
                        <FormInput
                          as={[Function]}
                          control={[Function]}
                          error={null}
                          label="New Password:"
                          name="password1"
                          onChange={[Function]}
                          required={true}
                          type="password"
                        />
                        <FormInput
                          as={[Function]}
                          control={[Function]}
                          error={null}
                          label="Verify:"
                          name="password2"
                          onChange={[Function]}
                          required={true}
                          type="password"
                        />
                      </FormGroup>
                      <FormButton
                        as={[Function]}
                        control={[Function]}
                        primary={true}
                      >
                        Save
                      </FormButton>
                    </Form>
                  </Segment>
                </GridRow>
              </React.Fragment>
            </GridColumn>
          </GridRow>,
        ],
        "columns": 16,
        "divided": "vertically",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <Header
              as="h1"
            >
              <Icon
                as="i"
                name="settings"
              />
              <HeaderContent>
                My Settings
              </HeaderContent>
            </Header>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "as": "h1",
              "children": Array [
                <Icon
                  as="i"
                  name="settings"
                />,
                <HeaderContent>
                  My Settings
                </HeaderContent>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "as": "i",
                  "name": "settings",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": "My Settings",
                },
                "ref": null,
                "rendered": "My Settings",
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <GridColumn
              width={5}
            >
              <React.Fragment>
                <Message
                  info={true}
                >
                  Changing any of these settings requires signing back in.
                </Message>
                <GridRow
                  style={
                    Object {
                      "paddingBottom": "10px",
                      "paddingTop": "10px",
                    }
                  }
                >
                  <Segment
                    raised={true}
                  >
                    <Header
                      dividing={true}
                    >
                      <Icon
                        as="i"
                        name="user"
                      />
                      <HeaderContent>
                        Change Username
                      </HeaderContent>
                    </Header>
                    <Form
                      as="form"
                      onSubmit={[Function]}
                    >
                      <FormInput
                        as={[Function]}
                        control={[Function]}
                        defaultValue="testuser"
                        error={null}
                        inline={true}
                        label="Username:"
                        name="username"
                        onChange={[Function]}
                        required={true}
                      />
                      <FormButton
                        as={[Function]}
                        control={[Function]}
                        primary={true}
                      >
                        Save
                      </FormButton>
                    </Form>
                  </Segment>
                </GridRow>
                <GridRow>
                  <Segment
                    raised={true}
                  >
                    <Header
                      dividing={true}
                    >
                      <Icon
                        as="i"
                        name="lock"
                      />
                      <HeaderContent>
                        Change Password
                      </HeaderContent>
                    </Header>
                    <Form
                      as="form"
                      onSubmit={[Function]}
                    >
                      <FormGroup
                        widths="equal"
                      >
                        <FormInput
                          as={[Function]}
                          control={[Function]}
                          error={null}
                          label="New Password:"
                          name="password1"
                          onChange={[Function]}
                          required={true}
                          type="password"
                        />
                        <FormInput
                          as={[Function]}
                          control={[Function]}
                          error={null}
                          label="Verify:"
                          name="password2"
                          onChange={[Function]}
                          required={true}
                          type="password"
                        />
                      </FormGroup>
                      <FormButton
                        as={[Function]}
                        control={[Function]}
                        primary={true}
                      >
                        Save
                      </FormButton>
                    </Form>
                  </Segment>
                </GridRow>
              </React.Fragment>
            </GridColumn>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": Array [
                null,
                <React.Fragment>
                  <Message
                    info={true}
                  >
                    Changing any of these settings requires signing back in.
                  </Message>
                  <GridRow
                    style={
                      Object {
                        "paddingBottom": "10px",
                        "paddingTop": "10px",
                      }
                    }
                  >
                    <Segment
                      raised={true}
                    >
                      <Header
                        dividing={true}
                      >
                        <Icon
                          as="i"
                          name="user"
                        />
                        <HeaderContent>
                          Change Username
                        </HeaderContent>
                      </Header>
                      <Form
                        as="form"
                        onSubmit={[Function]}
                      >
                        <FormInput
                          as={[Function]}
                          control={[Function]}
                          defaultValue="testuser"
                          error={null}
                          inline={true}
                          label="Username:"
                          name="username"
                          onChange={[Function]}
                          required={true}
                        />
                        <FormButton
                          as={[Function]}
                          control={[Function]}
                          primary={true}
                        >
                          Save
                        </FormButton>
                      </Form>
                    </Segment>
                  </GridRow>
                  <GridRow>
                    <Segment
                      raised={true}
                    >
                      <Header
                        dividing={true}
                      >
                        <Icon
                          as="i"
                          name="lock"
                        />
                        <HeaderContent>
                          Change Password
                        </HeaderContent>
                      </Header>
                      <Form
                        as="form"
                        onSubmit={[Function]}
                      >
                        <FormGroup
                          widths="equal"
                        >
                          <FormInput
                            as={[Function]}
                            control={[Function]}
                            error={null}
                            label="New Password:"
                            name="password1"
                            onChange={[Function]}
                            required={true}
                            type="password"
                          />
                          <FormInput
                            as={[Function]}
                            control={[Function]}
                            error={null}
                            label="Verify:"
                            name="password2"
                            onChange={[Function]}
                            required={true}
                            type="password"
                          />
                        </FormGroup>
                        <FormButton
                          as={[Function]}
                          control={[Function]}
                          primary={true}
                        >
                          Save
                        </FormButton>
                      </Form>
                    </Segment>
                  </GridRow>
                </React.Fragment>,
              ],
              "width": 5,
            },
            "ref": null,
            "rendered": Array [
              null,
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": Array [
                    <Message
                      info={true}
                    >
                      Changing any of these settings requires signing back in.
                    </Message>,
                    null,
                    <GridRow
                      style={
                        Object {
                          "paddingBottom": "10px",
                          "paddingTop": "10px",
                        }
                      }
                    >
                      <Segment
                        raised={true}
                      >
                        <Header
                          dividing={true}
                        >
                          <Icon
                            as="i"
                            name="user"
                          />
                          <HeaderContent>
                            Change Username
                          </HeaderContent>
                        </Header>
                        <Form
                          as="form"
                          onSubmit={[Function]}
                        >
                          <FormInput
                            as={[Function]}
                            control={[Function]}
                            defaultValue="testuser"
                            error={null}
                            inline={true}
                            label="Username:"
                            name="username"
                            onChange={[Function]}
                            required={true}
                          />
                          <FormButton
                            as={[Function]}
                            control={[Function]}
                            primary={true}
                          >
                            Save
                          </FormButton>
                        </Form>
                      </Segment>
                    </GridRow>,
                    <GridRow>
                      <Segment
                        raised={true}
                      >
                        <Header
                          dividing={true}
                        >
                          <Icon
                            as="i"
                            name="lock"
                          />
                          <HeaderContent>
                            Change Password
                          </HeaderContent>
                        </Header>
                        <Form
                          as="form"
                          onSubmit={[Function]}
                        >
                          <FormGroup
                            widths="equal"
                          >
                            <FormInput
                              as={[Function]}
                              control={[Function]}
                              error={null}
                              label="New Password:"
                              name="password1"
                              onChange={[Function]}
                              required={true}
                              type="password"
                            />
                            <FormInput
                              as={[Function]}
                              control={[Function]}
                              error={null}
                              label="Verify:"
                              name="password2"
                              onChange={[Function]}
                              required={true}
                              type="password"
                            />
                          </FormGroup>
                          <FormButton
                            as={[Function]}
                            control={[Function]}
                            primary={true}
                          >
                            Save
                          </FormButton>
                        </Form>
                      </Segment>
                    </GridRow>,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": "Changing any of these settings requires signing back in.",
                      "info": true,
                    },
                    "ref": null,
                    "rendered": "Changing any of these settings requires signing back in.",
                    "type": [Function],
                  },
                  null,
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "children": <Segment
                        raised={true}
                      >
                        <Header
                          dividing={true}
                        >
                          <Icon
                            as="i"
                            name="user"
                          />
                          <HeaderContent>
                            Change Username
                          </HeaderContent>
                        </Header>
                        <Form
                          as="form"
                          onSubmit={[Function]}
                        >
                          <FormInput
                            as={[Function]}
                            control={[Function]}
                            defaultValue="testuser"
                            error={null}
                            inline={true}
                            label="Username:"
                            name="username"
                            onChange={[Function]}
                            required={true}
                          />
                          <FormButton
                            as={[Function]}
                            control={[Function]}
                            primary={true}
                          >
                            Save
                          </FormButton>
                        </Form>
                      </Segment>,
                      "style": Object {
                        "paddingBottom": "10px",
                        "paddingTop": "10px",
                      },
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "children": Array [
                          <Header
                            dividing={true}
                          >
                            <Icon
                              as="i"
                              name="user"
                            />
                            <HeaderContent>
                              Change Username
                            </HeaderContent>
                          </Header>,
                          <Form
                            as="form"
                            onSubmit={[Function]}
                          >
                            <FormInput
                              as={[Function]}
                              control={[Function]}
                              defaultValue="testuser"
                              error={null}
                              inline={true}
                              label="Username:"
                              name="username"
                              onChange={[Function]}
                              required={true}
                            />
                            <FormButton
                              as={[Function]}
                              control={[Function]}
                              primary={true}
                            >
                              Save
                            </FormButton>
                          </Form>,
                        ],
                        "raised": true,
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "function",
                          "props": Object {
                            "children": Array [
                              <Icon
                                as="i"
                                name="user"
                              />,
                              <HeaderContent>
                                Change Username
                              </HeaderContent>,
                            ],
                            "dividing": true,
                          },
                          "ref": null,
                          "rendered": Array [
                            Object {
                              "instance": null,
                              "key": undefined,
                              "nodeType": "class",
                              "props": Object {
                                "as": "i",
                                "name": "user",
                              },
                              "ref": null,
                              "rendered": null,
                              "type": [Function],
                            },
                            Object {
                              "instance": null,
                              "key": undefined,
                              "nodeType": "function",
                              "props": Object {
                                "children": "Change Username",
                              },
                              "ref": null,
                              "rendered": "Change Username",
                              "type": [Function],
                            },
                          ],
                          "type": [Function],
                        },
                        Object {
                          "instance": null,
                          "key": "1",
                          "nodeType": "class",
                          "props": Object {
                            "as": "form",
                            "children": Array [
                              <FormInput
                                as={[Function]}
                                control={[Function]}
                                defaultValue="testuser"
                                error={null}
                                inline={true}
                                label="Username:"
                                name="username"
                                onChange={[Function]}
                                required={true}
                              />,
                              <FormButton
                                as={[Function]}
                                control={[Function]}
                                primary={true}
                              >
                                Save
                              </FormButton>,
                            ],
                            "onSubmit": [Function],
                          },
                          "ref": null,
                          "rendered": Array [
                            Object {
                              "instance": null,
                              "key": undefined,
                              "nodeType": "function",
                              "props": Object {
                                "as": [Function],
                                "control": [Function],
                                "defaultValue": "testuser",
                                "error": null,
                                "inline": true,
                                "label": "Username:",
                                "name": "username",
                                "onChange": [Function],
                                "required": true,
                              },
                              "ref": null,
                              "rendered": null,
                              "type": [Function],
                            },
                            Object {
                              "instance": null,
                              "key": undefined,
                              "nodeType": "function",
                              "props": Object {
                                "as": [Function],
                                "children": "Save",
                                "control": [Function],
                                "primary": true,
                              },
                              "ref": null,
                              "rendered": "Save",
                              "type": [Function],
                            },
                          ],
                          "type": [Function],
                        },
                      ],
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "children": <Segment
                        raised={true}
                      >
                        <Header
                          dividing={true}
                        >
                          <Icon
                            as="i"
                            name="lock"
                          />
                          <HeaderContent>
                            Change Password
                          </HeaderContent>
                        </Header>
                        <Form
                          as="form"
                          onSubmit={[Function]}
                        >
                          <FormGroup
                            widths="equal"
                          >
                            <FormInput
                              as={[Function]}
                              control={[Function]}
                              error={null}
                              label="New Password:"
                              name="password1"
                              onChange={[Function]}
                              required={true}
                              type="password"
                            />
                            <FormInput
                              as={[Function]}
                              control={[Function]}
                              error={null}
                              label="Verify:"
                              name="password2"
                              onChange={[Function]}
                              required={true}
                              type="password"
                            />
                          </FormGroup>
                          <FormButton
                            as={[Function]}
                            control={[Function]}
                            primary={true}
                          >
                            Save
                          </FormButton>
                        </Form>
                      </Segment>,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "children": Array [
                          <Header
                            dividing={true}
                          >
                            <Icon
                              as="i"
                              name="lock"
                            />
                            <HeaderContent>
                              Change Password
                            </HeaderContent>
                          </Header>,
                          <Form
                            as="form"
                            onSubmit={[Function]}
                          >
                            <FormGroup
                              widths="equal"
                            >
                              <FormInput
                                as={[Function]}
                                control={[Function]}
                                error={null}
                                label="New Password:"
                                name="password1"
                                onChange={[Function]}
                                required={true}
                                type="password"
                              />
                              <FormInput
                                as={[Function]}
                                control={[Function]}
                                error={null}
                                label="Verify:"
                                name="password2"
                                onChange={[Function]}
                                required={true}
                                type="password"
                              />
                            </FormGroup>
                            <FormButton
                              as={[Function]}
                              control={[Function]}
                              primary={true}
                            >
                              Save
                            </FormButton>
                          </Form>,
                        ],
                        "raised": true,
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "function",
                          "props": Object {
                            "children": Array [
                              <Icon
                                as="i"
                                name="lock"
                              />,
                              <HeaderContent>
                                Change Password
                              </HeaderContent>,
                            ],
                            "dividing": true,
                          },
                          "ref": null,
                          "rendered": Array [
                            Object {
                              "instance": null,
                              "key": undefined,
                              "nodeType": "class",
                              "props": Object {
                                "as": "i",
                                "name": "lock",
                              },
                              "ref": null,
                              "rendered": null,
                              "type": [Function],
                            },
                            Object {
                              "instance": null,
                              "key": undefined,
                              "nodeType": "function",
                              "props": Object {
                                "children": "Change Password",
                              },
                              "ref": null,
                              "rendered": "Change Password",
                              "type": [Function],
                            },
                          ],
                          "type": [Function],
                        },
                        Object {
                          "instance": null,
                          "key": "1",
                          "nodeType": "class",
                          "props": Object {
                            "as": "form",
                            "children": Array [
                              <FormGroup
                                widths="equal"
                              >
                                <FormInput
                                  as={[Function]}
                                  control={[Function]}
                                  error={null}
                                  label="New Password:"
                                  name="password1"
                                  onChange={[Function]}
                                  required={true}
                                  type="password"
                                />
                                <FormInput
                                  as={[Function]}
                                  control={[Function]}
                                  error={null}
                                  label="Verify:"
                                  name="password2"
                                  onChange={[Function]}
                                  required={true}
                                  type="password"
                                />
                              </FormGroup>,
                              <FormButton
                                as={[Function]}
                                control={[Function]}
                                primary={true}
                              >
                                Save
                              </FormButton>,
                            ],
                            "onSubmit": [Function],
                          },
                          "ref": null,
                          "rendered": Array [
                            Object {
                              "instance": null,
                              "key": undefined,
                              "nodeType": "function",
                              "props": Object {
                                "children": Array [
                                  <FormInput
                                    as={[Function]}
                                    control={[Function]}
                                    error={null}
                                    label="New Password:"
                                    name="password1"
                                    onChange={[Function]}
                                    required={true}
                                    type="password"
                                  />,
                                  <FormInput
                                    as={[Function]}
                                    control={[Function]}
                                    error={null}
                                    label="Verify:"
                                    name="password2"
                                    onChange={[Function]}
                                    required={true}
                                    type="password"
                                  />,
                                ],
                                "widths": "equal",
                              },
                              "ref": null,
                              "rendered": Array [
                                Object {
                                  "instance": null,
                                  "key": undefined,
                                  "nodeType": "function",
                                  "props": Object {
                                    "as": [Function],
                                    "control": [Function],
                                    "error": null,
                                    "label": "New Password:",
                                    "name": "password1",
                                    "onChange": [Function],
                                    "required": true,
                                    "type": "password",
                                  },
                                  "ref": null,
                                  "rendered": null,
                                  "type": [Function],
                                },
                                Object {
                                  "instance": null,
                                  "key": undefined,
                                  "nodeType": "function",
                                  "props": Object {
                                    "as": [Function],
                                    "control": [Function],
                                    "error": null,
                                    "label": "Verify:",
                                    "name": "password2",
                                    "onChange": [Function],
                                    "required": true,
                                    "type": "password",
                                  },
                                  "ref": null,
                                  "rendered": null,
                                  "type": [Function],
                                },
                              ],
                              "type": [Function],
                            },
                            Object {
                              "instance": null,
                              "key": undefined,
                              "nodeType": "function",
                              "props": Object {
                                "as": [Function],
                                "children": "Save",
                                "control": [Function],
                                "primary": true,
                              },
                              "ref": null,
                              "rendered": "Save",
                              "type": [Function],
                            },
                          ],
                          "type": [Function],
                        },
                      ],
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                ],
                "type": Symbol(react.fragment),
              },
            ],
            "type": [Function],
          },
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;
