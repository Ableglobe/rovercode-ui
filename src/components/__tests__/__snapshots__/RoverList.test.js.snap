// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`The RoverList component renders on the page with no errors 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <RoverList
    fetchRovers={[Function]}
    rovers={null}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <Loader
          active={true}
        />,
        <Link
          replace={false}
          to="/mission-control"
        >
          <Button
            as="button"
          >
            Mission Control
          </Button>
        </Link>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "active": true,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <Button
            as="button"
          >
            Mission Control
          </Button>,
          "replace": false,
          "to": "/mission-control",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "as": "button",
            "children": "Mission Control",
          },
          "ref": null,
          "rendered": "Mission Control",
          "type": [Function],
        },
        "type": [Function],
      },
    ],
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <Loader
            active={true}
          />,
          <Link
            replace={false}
            to="/mission-control"
          >
            <Button
              as="button"
            >
              Mission Control
            </Button>
          </Link>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "active": true,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <Button
              as="button"
            >
              Mission Control
            </Button>,
            "replace": false,
            "to": "/mission-control",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "as": "button",
              "children": "Mission Control",
            },
            "ref": null,
            "rendered": "Mission Control",
            "type": [Function],
          },
          "type": [Function],
        },
      ],
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
