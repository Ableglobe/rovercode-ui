// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`The RoverList component renders on the page with no errors 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <RoverList
    createRover={[MockFunction]}
    fetchRovers={
      [MockFunction] {
        "calls": Array [
          Array [],
        ],
        "results": Array [
          Object {
            "isThrow": false,
            "value": Promise {},
          },
        ],
      }
    }
    isFetching={false}
    removeRover={[MockFunction]}
    rovers={
      Object {
        "next": null,
        "previous": null,
        "results": Array [
          Object {
            "client_id": "1234",
            "id": 1,
            "name": "Sparky",
          },
          Object {
            "client_id": "5678",
            "id": 2,
            "name": "Marvin",
          },
        ],
        "total_pages": 2,
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        null,
        <Modal
          centered={true}
          closeOnDimmerClick={true}
          closeOnDocumentClick={false}
          dimmer={true}
          eventPool="Modal"
          onClose={[Function]}
          open={false}
          trigger={
            <Button
              as="button"
              onClick={[Function]}
              primary={true}
              style={
                Object {
                  "marginLeft": "10px",
                }
              }
            >
              <Icon
                as="i"
                name="plus"
              />
              Register New Rover
            </Button>
          }
        >
          <ModalHeader>
            Enter the name of the rover
          </ModalHeader>
          <ModalContent>
            <Form
              as="form"
              id="nameForm"
              onSubmit={[Function]}
            >
              <FormInput
                as={[Function]}
                control={[Function]}
                onChange={[Function]}
                placeholder="Rover name"
                required={true}
              />
            </Form>
          </ModalContent>
          <ModalActions>
            <Button
              as="button"
              form="nameForm"
              primary={true}
              type="submit"
            >
              Create
            </Button>
            <Button
              as="button"
              onClick={[Function]}
            >
              Cancel
            </Button>
          </ModalActions>
        </Modal>,
        <Segment
          raised={true}
          style={
            Object {
              "margin": "10px",
            }
          }
        >
          <Header
            as="h1"
            textAlign="center"
          >
            Rovers
          </Header>
          <CardGroup
            centered={true}
          >
            <Card>
              <CardContent>
                <CardHeader>
                  Sparky
                </CardHeader>
              </CardContent>
              <CardContent
                extra={true}
              >
                <Button
                  as={[Function]}
                  primary={true}
                  to="/rovers/1"
                >
                  Configure
                </Button>
                <Button
                  as="button"
                  floated="right"
                  id={1}
                  name="Sparky"
                  negative={true}
                  onClick={[Function]}
                >
                  Remove
                </Button>
              </CardContent>
            </Card>
            <Card>
              <CardContent>
                <CardHeader>
                  Marvin
                </CardHeader>
              </CardContent>
              <CardContent
                extra={true}
              >
                <Button
                  as={[Function]}
                  primary={true}
                  to="/rovers/2"
                >
                  Configure
                </Button>
                <Button
                  as="button"
                  floated="right"
                  id={2}
                  name="Marvin"
                  negative={true}
                  onClick={[Function]}
                >
                  Remove
                </Button>
              </CardContent>
            </Card>
          </CardGroup>
          <Grid
            centered={true}
          >
            <GridRow>
              <CustomPagination
                defaultActivePage={1}
                onPageChange={[Function]}
                totalPages={2}
              />
            </GridRow>
          </Grid>
          <Confirm
            cancelButton="No"
            confirmButton="Yes"
            content="Are you sure you want to remove null?"
            header="Remove Rover"
            onCancel={[Function]}
            onConfirm={[Function]}
            open={false}
            size="small"
          />
        </Segment>,
      ],
    },
    "ref": null,
    "rendered": Array [
      null,
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "centered": true,
          "children": Array [
            <ModalHeader>
              Enter the name of the rover
            </ModalHeader>,
            <ModalContent>
              <Form
                as="form"
                id="nameForm"
                onSubmit={[Function]}
              >
                <FormInput
                  as={[Function]}
                  control={[Function]}
                  onChange={[Function]}
                  placeholder="Rover name"
                  required={true}
                />
              </Form>
            </ModalContent>,
            <ModalActions>
              <Button
                as="button"
                form="nameForm"
                primary={true}
                type="submit"
              >
                Create
              </Button>
              <Button
                as="button"
                onClick={[Function]}
              >
                Cancel
              </Button>
            </ModalActions>,
          ],
          "closeOnDimmerClick": true,
          "closeOnDocumentClick": false,
          "dimmer": true,
          "eventPool": "Modal",
          "onClose": [Function],
          "open": false,
          "trigger": <Button
            as="button"
            onClick={[Function]}
            primary={true}
            style={
              Object {
                "marginLeft": "10px",
              }
            }
          >
            <Icon
              as="i"
              name="plus"
            />
            Register New Rover
          </Button>,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": "Enter the name of the rover",
            },
            "ref": null,
            "rendered": "Enter the name of the rover",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": <Form
                as="form"
                id="nameForm"
                onSubmit={[Function]}
              >
                <FormInput
                  as={[Function]}
                  control={[Function]}
                  onChange={[Function]}
                  placeholder="Rover name"
                  required={true}
                />
              </Form>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "as": "form",
                "children": <FormInput
                  as={[Function]}
                  control={[Function]}
                  onChange={[Function]}
                  placeholder="Rover name"
                  required={true}
                />,
                "id": "nameForm",
                "onSubmit": [Function],
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": [Function],
                  "control": [Function],
                  "onChange": [Function],
                  "placeholder": "Rover name",
                  "required": true,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <Button
                  as="button"
                  form="nameForm"
                  primary={true}
                  type="submit"
                >
                  Create
                </Button>,
                <Button
                  as="button"
                  onClick={[Function]}
                >
                  Cancel
                </Button>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "as": "button",
                  "children": "Create",
                  "form": "nameForm",
                  "primary": true,
                  "type": "submit",
                },
                "ref": null,
                "rendered": "Create",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "as": "button",
                  "children": "Cancel",
                  "onClick": [Function],
                },
                "ref": null,
                "rendered": "Cancel",
                "type": [Function],
              },
            ],
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            <Header
              as="h1"
              textAlign="center"
            >
              Rovers
            </Header>,
            <CardGroup
              centered={true}
            >
              <Card>
                <CardContent>
                  <CardHeader>
                    Sparky
                  </CardHeader>
                </CardContent>
                <CardContent
                  extra={true}
                >
                  <Button
                    as={[Function]}
                    primary={true}
                    to="/rovers/1"
                  >
                    Configure
                  </Button>
                  <Button
                    as="button"
                    floated="right"
                    id={1}
                    name="Sparky"
                    negative={true}
                    onClick={[Function]}
                  >
                    Remove
                  </Button>
                </CardContent>
              </Card>
              <Card>
                <CardContent>
                  <CardHeader>
                    Marvin
                  </CardHeader>
                </CardContent>
                <CardContent
                  extra={true}
                >
                  <Button
                    as={[Function]}
                    primary={true}
                    to="/rovers/2"
                  >
                    Configure
                  </Button>
                  <Button
                    as="button"
                    floated="right"
                    id={2}
                    name="Marvin"
                    negative={true}
                    onClick={[Function]}
                  >
                    Remove
                  </Button>
                </CardContent>
              </Card>
            </CardGroup>,
            <Grid
              centered={true}
            >
              <GridRow>
                <CustomPagination
                  defaultActivePage={1}
                  onPageChange={[Function]}
                  totalPages={2}
                />
              </GridRow>
            </Grid>,
            <Confirm
              cancelButton="No"
              confirmButton="Yes"
              content="Are you sure you want to remove null?"
              header="Remove Rover"
              onCancel={[Function]}
              onConfirm={[Function]}
              open={false}
              size="small"
            />,
          ],
          "raised": true,
          "style": Object {
            "margin": "10px",
          },
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "as": "h1",
              "children": "Rovers",
              "textAlign": "center",
            },
            "ref": null,
            "rendered": "Rovers",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "centered": true,
              "children": Array [
                <Card>
                  <CardContent>
                    <CardHeader>
                      Sparky
                    </CardHeader>
                  </CardContent>
                  <CardContent
                    extra={true}
                  >
                    <Button
                      as={[Function]}
                      primary={true}
                      to="/rovers/1"
                    >
                      Configure
                    </Button>
                    <Button
                      as="button"
                      floated="right"
                      id={1}
                      name="Sparky"
                      negative={true}
                      onClick={[Function]}
                    >
                      Remove
                    </Button>
                  </CardContent>
                </Card>,
                <Card>
                  <CardContent>
                    <CardHeader>
                      Marvin
                    </CardHeader>
                  </CardContent>
                  <CardContent
                    extra={true}
                  >
                    <Button
                      as={[Function]}
                      primary={true}
                      to="/rovers/2"
                    >
                      Configure
                    </Button>
                    <Button
                      as="button"
                      floated="right"
                      id={2}
                      name="Marvin"
                      negative={true}
                      onClick={[Function]}
                    >
                      Remove
                    </Button>
                  </CardContent>
                </Card>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": "1",
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    <CardContent>
                      <CardHeader>
                        Sparky
                      </CardHeader>
                    </CardContent>,
                    <CardContent
                      extra={true}
                    >
                      <Button
                        as={[Function]}
                        primary={true}
                        to="/rovers/1"
                      >
                        Configure
                      </Button>
                      <Button
                        as="button"
                        floated="right"
                        id={1}
                        name="Sparky"
                        negative={true}
                        onClick={[Function]}
                      >
                        Remove
                      </Button>
                    </CardContent>,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "children": <CardHeader>
                        Sparky
                      </CardHeader>,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "children": "Sparky",
                      },
                      "ref": null,
                      "rendered": "Sparky",
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "children": Array [
                        <Button
                          as={[Function]}
                          primary={true}
                          to="/rovers/1"
                        >
                          Configure
                        </Button>,
                        <Button
                          as="button"
                          floated="right"
                          id={1}
                          name="Sparky"
                          negative={true}
                          onClick={[Function]}
                        >
                          Remove
                        </Button>,
                      ],
                      "extra": true,
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "as": [Function],
                          "children": "Configure",
                          "primary": true,
                          "to": "/rovers/1",
                        },
                        "ref": null,
                        "rendered": "Configure",
                        "type": [Function],
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "as": "button",
                          "children": "Remove",
                          "floated": "right",
                          "id": 1,
                          "name": "Sparky",
                          "negative": true,
                          "onClick": [Function],
                        },
                        "ref": null,
                        "rendered": "Remove",
                        "type": [Function],
                      },
                    ],
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": "2",
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    <CardContent>
                      <CardHeader>
                        Marvin
                      </CardHeader>
                    </CardContent>,
                    <CardContent
                      extra={true}
                    >
                      <Button
                        as={[Function]}
                        primary={true}
                        to="/rovers/2"
                      >
                        Configure
                      </Button>
                      <Button
                        as="button"
                        floated="right"
                        id={2}
                        name="Marvin"
                        negative={true}
                        onClick={[Function]}
                      >
                        Remove
                      </Button>
                    </CardContent>,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "children": <CardHeader>
                        Marvin
                      </CardHeader>,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "children": "Marvin",
                      },
                      "ref": null,
                      "rendered": "Marvin",
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "children": Array [
                        <Button
                          as={[Function]}
                          primary={true}
                          to="/rovers/2"
                        >
                          Configure
                        </Button>,
                        <Button
                          as="button"
                          floated="right"
                          id={2}
                          name="Marvin"
                          negative={true}
                          onClick={[Function]}
                        >
                          Remove
                        </Button>,
                      ],
                      "extra": true,
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "as": [Function],
                          "children": "Configure",
                          "primary": true,
                          "to": "/rovers/2",
                        },
                        "ref": null,
                        "rendered": "Configure",
                        "type": [Function],
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "as": "button",
                          "children": "Remove",
                          "floated": "right",
                          "id": 2,
                          "name": "Marvin",
                          "negative": true,
                          "onClick": [Function],
                        },
                        "ref": null,
                        "rendered": "Remove",
                        "type": [Function],
                      },
                    ],
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "centered": true,
              "children": <GridRow>
                <CustomPagination
                  defaultActivePage={1}
                  onPageChange={[Function]}
                  totalPages={2}
                />
              </GridRow>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": <CustomPagination
                  defaultActivePage={1}
                  onPageChange={[Function]}
                  totalPages={2}
                />,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "defaultActivePage": 1,
                  "onPageChange": [Function],
                  "totalPages": 2,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "cancelButton": "No",
              "confirmButton": "Yes",
              "content": "Are you sure you want to remove null?",
              "header": "Remove Rover",
              "onCancel": [Function],
              "onConfirm": [Function],
              "open": false,
              "size": "small",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": [Function],
      },
    ],
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          null,
          <Modal
            centered={true}
            closeOnDimmerClick={true}
            closeOnDocumentClick={false}
            dimmer={true}
            eventPool="Modal"
            onClose={[Function]}
            open={false}
            trigger={
              <Button
                as="button"
                onClick={[Function]}
                primary={true}
                style={
                  Object {
                    "marginLeft": "10px",
                  }
                }
              >
                <Icon
                  as="i"
                  name="plus"
                />
                Register New Rover
              </Button>
            }
          >
            <ModalHeader>
              Enter the name of the rover
            </ModalHeader>
            <ModalContent>
              <Form
                as="form"
                id="nameForm"
                onSubmit={[Function]}
              >
                <FormInput
                  as={[Function]}
                  control={[Function]}
                  onChange={[Function]}
                  placeholder="Rover name"
                  required={true}
                />
              </Form>
            </ModalContent>
            <ModalActions>
              <Button
                as="button"
                form="nameForm"
                primary={true}
                type="submit"
              >
                Create
              </Button>
              <Button
                as="button"
                onClick={[Function]}
              >
                Cancel
              </Button>
            </ModalActions>
          </Modal>,
          <Segment
            raised={true}
            style={
              Object {
                "margin": "10px",
              }
            }
          >
            <Header
              as="h1"
              textAlign="center"
            >
              Rovers
            </Header>
            <CardGroup
              centered={true}
            >
              <Card>
                <CardContent>
                  <CardHeader>
                    Sparky
                  </CardHeader>
                </CardContent>
                <CardContent
                  extra={true}
                >
                  <Button
                    as={[Function]}
                    primary={true}
                    to="/rovers/1"
                  >
                    Configure
                  </Button>
                  <Button
                    as="button"
                    floated="right"
                    id={1}
                    name="Sparky"
                    negative={true}
                    onClick={[Function]}
                  >
                    Remove
                  </Button>
                </CardContent>
              </Card>
              <Card>
                <CardContent>
                  <CardHeader>
                    Marvin
                  </CardHeader>
                </CardContent>
                <CardContent
                  extra={true}
                >
                  <Button
                    as={[Function]}
                    primary={true}
                    to="/rovers/2"
                  >
                    Configure
                  </Button>
                  <Button
                    as="button"
                    floated="right"
                    id={2}
                    name="Marvin"
                    negative={true}
                    onClick={[Function]}
                  >
                    Remove
                  </Button>
                </CardContent>
              </Card>
            </CardGroup>
            <Grid
              centered={true}
            >
              <GridRow>
                <CustomPagination
                  defaultActivePage={1}
                  onPageChange={[Function]}
                  totalPages={2}
                />
              </GridRow>
            </Grid>
            <Confirm
              cancelButton="No"
              confirmButton="Yes"
              content="Are you sure you want to remove null?"
              header="Remove Rover"
              onCancel={[Function]}
              onConfirm={[Function]}
              open={false}
              size="small"
            />
          </Segment>,
        ],
      },
      "ref": null,
      "rendered": Array [
        null,
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "centered": true,
            "children": Array [
              <ModalHeader>
                Enter the name of the rover
              </ModalHeader>,
              <ModalContent>
                <Form
                  as="form"
                  id="nameForm"
                  onSubmit={[Function]}
                >
                  <FormInput
                    as={[Function]}
                    control={[Function]}
                    onChange={[Function]}
                    placeholder="Rover name"
                    required={true}
                  />
                </Form>
              </ModalContent>,
              <ModalActions>
                <Button
                  as="button"
                  form="nameForm"
                  primary={true}
                  type="submit"
                >
                  Create
                </Button>
                <Button
                  as="button"
                  onClick={[Function]}
                >
                  Cancel
                </Button>
              </ModalActions>,
            ],
            "closeOnDimmerClick": true,
            "closeOnDocumentClick": false,
            "dimmer": true,
            "eventPool": "Modal",
            "onClose": [Function],
            "open": false,
            "trigger": <Button
              as="button"
              onClick={[Function]}
              primary={true}
              style={
                Object {
                  "marginLeft": "10px",
                }
              }
            >
              <Icon
                as="i"
                name="plus"
              />
              Register New Rover
            </Button>,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": "Enter the name of the rover",
              },
              "ref": null,
              "rendered": "Enter the name of the rover",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": <Form
                  as="form"
                  id="nameForm"
                  onSubmit={[Function]}
                >
                  <FormInput
                    as={[Function]}
                    control={[Function]}
                    onChange={[Function]}
                    placeholder="Rover name"
                    required={true}
                  />
                </Form>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "as": "form",
                  "children": <FormInput
                    as={[Function]}
                    control={[Function]}
                    onChange={[Function]}
                    placeholder="Rover name"
                    required={true}
                  />,
                  "id": "nameForm",
                  "onSubmit": [Function],
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "as": [Function],
                    "control": [Function],
                    "onChange": [Function],
                    "placeholder": "Rover name",
                    "required": true,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <Button
                    as="button"
                    form="nameForm"
                    primary={true}
                    type="submit"
                  >
                    Create
                  </Button>,
                  <Button
                    as="button"
                    onClick={[Function]}
                  >
                    Cancel
                  </Button>,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "as": "button",
                    "children": "Create",
                    "form": "nameForm",
                    "primary": true,
                    "type": "submit",
                  },
                  "ref": null,
                  "rendered": "Create",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "as": "button",
                    "children": "Cancel",
                    "onClick": [Function],
                  },
                  "ref": null,
                  "rendered": "Cancel",
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <Header
                as="h1"
                textAlign="center"
              >
                Rovers
              </Header>,
              <CardGroup
                centered={true}
              >
                <Card>
                  <CardContent>
                    <CardHeader>
                      Sparky
                    </CardHeader>
                  </CardContent>
                  <CardContent
                    extra={true}
                  >
                    <Button
                      as={[Function]}
                      primary={true}
                      to="/rovers/1"
                    >
                      Configure
                    </Button>
                    <Button
                      as="button"
                      floated="right"
                      id={1}
                      name="Sparky"
                      negative={true}
                      onClick={[Function]}
                    >
                      Remove
                    </Button>
                  </CardContent>
                </Card>
                <Card>
                  <CardContent>
                    <CardHeader>
                      Marvin
                    </CardHeader>
                  </CardContent>
                  <CardContent
                    extra={true}
                  >
                    <Button
                      as={[Function]}
                      primary={true}
                      to="/rovers/2"
                    >
                      Configure
                    </Button>
                    <Button
                      as="button"
                      floated="right"
                      id={2}
                      name="Marvin"
                      negative={true}
                      onClick={[Function]}
                    >
                      Remove
                    </Button>
                  </CardContent>
                </Card>
              </CardGroup>,
              <Grid
                centered={true}
              >
                <GridRow>
                  <CustomPagination
                    defaultActivePage={1}
                    onPageChange={[Function]}
                    totalPages={2}
                  />
                </GridRow>
              </Grid>,
              <Confirm
                cancelButton="No"
                confirmButton="Yes"
                content="Are you sure you want to remove null?"
                header="Remove Rover"
                onCancel={[Function]}
                onConfirm={[Function]}
                open={false}
                size="small"
              />,
            ],
            "raised": true,
            "style": Object {
              "margin": "10px",
            },
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "h1",
                "children": "Rovers",
                "textAlign": "center",
              },
              "ref": null,
              "rendered": "Rovers",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "centered": true,
                "children": Array [
                  <Card>
                    <CardContent>
                      <CardHeader>
                        Sparky
                      </CardHeader>
                    </CardContent>
                    <CardContent
                      extra={true}
                    >
                      <Button
                        as={[Function]}
                        primary={true}
                        to="/rovers/1"
                      >
                        Configure
                      </Button>
                      <Button
                        as="button"
                        floated="right"
                        id={1}
                        name="Sparky"
                        negative={true}
                        onClick={[Function]}
                      >
                        Remove
                      </Button>
                    </CardContent>
                  </Card>,
                  <Card>
                    <CardContent>
                      <CardHeader>
                        Marvin
                      </CardHeader>
                    </CardContent>
                    <CardContent
                      extra={true}
                    >
                      <Button
                        as={[Function]}
                        primary={true}
                        to="/rovers/2"
                      >
                        Configure
                      </Button>
                      <Button
                        as="button"
                        floated="right"
                        id={2}
                        name="Marvin"
                        negative={true}
                        onClick={[Function]}
                      >
                        Remove
                      </Button>
                    </CardContent>
                  </Card>,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": "1",
                  "nodeType": "class",
                  "props": Object {
                    "children": Array [
                      <CardContent>
                        <CardHeader>
                          Sparky
                        </CardHeader>
                      </CardContent>,
                      <CardContent
                        extra={true}
                      >
                        <Button
                          as={[Function]}
                          primary={true}
                          to="/rovers/1"
                        >
                          Configure
                        </Button>
                        <Button
                          as="button"
                          floated="right"
                          id={1}
                          name="Sparky"
                          negative={true}
                          onClick={[Function]}
                        >
                          Remove
                        </Button>
                      </CardContent>,
                    ],
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "children": <CardHeader>
                          Sparky
                        </CardHeader>,
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "function",
                        "props": Object {
                          "children": "Sparky",
                        },
                        "ref": null,
                        "rendered": "Sparky",
                        "type": [Function],
                      },
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "children": Array [
                          <Button
                            as={[Function]}
                            primary={true}
                            to="/rovers/1"
                          >
                            Configure
                          </Button>,
                          <Button
                            as="button"
                            floated="right"
                            id={1}
                            name="Sparky"
                            negative={true}
                            onClick={[Function]}
                          >
                            Remove
                          </Button>,
                        ],
                        "extra": true,
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "class",
                          "props": Object {
                            "as": [Function],
                            "children": "Configure",
                            "primary": true,
                            "to": "/rovers/1",
                          },
                          "ref": null,
                          "rendered": "Configure",
                          "type": [Function],
                        },
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "class",
                          "props": Object {
                            "as": "button",
                            "children": "Remove",
                            "floated": "right",
                            "id": 1,
                            "name": "Sparky",
                            "negative": true,
                            "onClick": [Function],
                          },
                          "ref": null,
                          "rendered": "Remove",
                          "type": [Function],
                        },
                      ],
                      "type": [Function],
                    },
                  ],
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": "2",
                  "nodeType": "class",
                  "props": Object {
                    "children": Array [
                      <CardContent>
                        <CardHeader>
                          Marvin
                        </CardHeader>
                      </CardContent>,
                      <CardContent
                        extra={true}
                      >
                        <Button
                          as={[Function]}
                          primary={true}
                          to="/rovers/2"
                        >
                          Configure
                        </Button>
                        <Button
                          as="button"
                          floated="right"
                          id={2}
                          name="Marvin"
                          negative={true}
                          onClick={[Function]}
                        >
                          Remove
                        </Button>
                      </CardContent>,
                    ],
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "children": <CardHeader>
                          Marvin
                        </CardHeader>,
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "function",
                        "props": Object {
                          "children": "Marvin",
                        },
                        "ref": null,
                        "rendered": "Marvin",
                        "type": [Function],
                      },
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "children": Array [
                          <Button
                            as={[Function]}
                            primary={true}
                            to="/rovers/2"
                          >
                            Configure
                          </Button>,
                          <Button
                            as="button"
                            floated="right"
                            id={2}
                            name="Marvin"
                            negative={true}
                            onClick={[Function]}
                          >
                            Remove
                          </Button>,
                        ],
                        "extra": true,
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "class",
                          "props": Object {
                            "as": [Function],
                            "children": "Configure",
                            "primary": true,
                            "to": "/rovers/2",
                          },
                          "ref": null,
                          "rendered": "Configure",
                          "type": [Function],
                        },
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "class",
                          "props": Object {
                            "as": "button",
                            "children": "Remove",
                            "floated": "right",
                            "id": 2,
                            "name": "Marvin",
                            "negative": true,
                            "onClick": [Function],
                          },
                          "ref": null,
                          "rendered": "Remove",
                          "type": [Function],
                        },
                      ],
                      "type": [Function],
                    },
                  ],
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "centered": true,
                "children": <GridRow>
                  <CustomPagination
                    defaultActivePage={1}
                    onPageChange={[Function]}
                    totalPages={2}
                  />
                </GridRow>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": <CustomPagination
                    defaultActivePage={1}
                    onPageChange={[Function]}
                    totalPages={2}
                  />,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "defaultActivePage": 1,
                    "onPageChange": [Function],
                    "totalPages": 2,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "cancelButton": "No",
                "confirmButton": "Yes",
                "content": "Are you sure you want to remove null?",
                "header": "Remove Rover",
                "onCancel": [Function],
                "onConfirm": [Function],
                "open": false,
                "size": "small",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": [Function],
        },
      ],
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
  Symbol(enzyme.__childContext__): null,
}
`;
