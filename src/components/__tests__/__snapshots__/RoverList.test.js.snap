// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`The RoverList component renders on the page with no errors 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <RoverList
    createRover={[MockFunction]}
    fetchRovers={
      [MockFunction] {
        "calls": Array [
          Array [],
        ],
        "results": Array [
          Object {
            "isThrow": false,
            "value": Promise {},
          },
        ],
      }
    }
    removeRover={[MockFunction]}
    rovers={null}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        null,
        <Modal
          centered={true}
          closeOnDimmerClick={true}
          closeOnDocumentClick={false}
          dimmer={true}
          eventPool="Modal"
          onClose={[Function]}
          open={false}
          trigger={
            <Button
              as="button"
              onClick={[Function]}
              primary={true}
              style={
                Object {
                  "marginLeft": "10px",
                }
              }
            >
              <Icon
                as="i"
                name="plus"
              />
              Register New Rover
            </Button>
          }
        >
          <ModalHeader>
            Enter the name of the rover
          </ModalHeader>
          <ModalContent>
            <Form
              as="form"
              id="nameForm"
              onSubmit={[Function]}
            >
              <FormInput
                as={[Function]}
                control={[Function]}
                onChange={[Function]}
                placeholder="Rover name"
                required={true}
              />
            </Form>
          </ModalContent>
          <ModalActions>
            <Button
              as="button"
              form="nameForm"
              primary={true}
              type="submit"
            >
              Create
            </Button>
            <Button
              as="button"
              onClick={[Function]}
            >
              Cancel
            </Button>
          </ModalActions>
        </Modal>,
        <Loader
          active={true}
        />,
      ],
    },
    "ref": null,
    "rendered": Array [
      null,
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "centered": true,
          "children": Array [
            <ModalHeader>
              Enter the name of the rover
            </ModalHeader>,
            <ModalContent>
              <Form
                as="form"
                id="nameForm"
                onSubmit={[Function]}
              >
                <FormInput
                  as={[Function]}
                  control={[Function]}
                  onChange={[Function]}
                  placeholder="Rover name"
                  required={true}
                />
              </Form>
            </ModalContent>,
            <ModalActions>
              <Button
                as="button"
                form="nameForm"
                primary={true}
                type="submit"
              >
                Create
              </Button>
              <Button
                as="button"
                onClick={[Function]}
              >
                Cancel
              </Button>
            </ModalActions>,
          ],
          "closeOnDimmerClick": true,
          "closeOnDocumentClick": false,
          "dimmer": true,
          "eventPool": "Modal",
          "onClose": [Function],
          "open": false,
          "trigger": <Button
            as="button"
            onClick={[Function]}
            primary={true}
            style={
              Object {
                "marginLeft": "10px",
              }
            }
          >
            <Icon
              as="i"
              name="plus"
            />
            Register New Rover
          </Button>,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": "Enter the name of the rover",
            },
            "ref": null,
            "rendered": "Enter the name of the rover",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": <Form
                as="form"
                id="nameForm"
                onSubmit={[Function]}
              >
                <FormInput
                  as={[Function]}
                  control={[Function]}
                  onChange={[Function]}
                  placeholder="Rover name"
                  required={true}
                />
              </Form>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "as": "form",
                "children": <FormInput
                  as={[Function]}
                  control={[Function]}
                  onChange={[Function]}
                  placeholder="Rover name"
                  required={true}
                />,
                "id": "nameForm",
                "onSubmit": [Function],
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": [Function],
                  "control": [Function],
                  "onChange": [Function],
                  "placeholder": "Rover name",
                  "required": true,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <Button
                  as="button"
                  form="nameForm"
                  primary={true}
                  type="submit"
                >
                  Create
                </Button>,
                <Button
                  as="button"
                  onClick={[Function]}
                >
                  Cancel
                </Button>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "as": "button",
                  "children": "Create",
                  "form": "nameForm",
                  "primary": true,
                  "type": "submit",
                },
                "ref": null,
                "rendered": "Create",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "as": "button",
                  "children": "Cancel",
                  "onClick": [Function],
                },
                "ref": null,
                "rendered": "Cancel",
                "type": [Function],
              },
            ],
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "active": true,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          null,
          <Modal
            centered={true}
            closeOnDimmerClick={true}
            closeOnDocumentClick={false}
            dimmer={true}
            eventPool="Modal"
            onClose={[Function]}
            open={false}
            trigger={
              <Button
                as="button"
                onClick={[Function]}
                primary={true}
                style={
                  Object {
                    "marginLeft": "10px",
                  }
                }
              >
                <Icon
                  as="i"
                  name="plus"
                />
                Register New Rover
              </Button>
            }
          >
            <ModalHeader>
              Enter the name of the rover
            </ModalHeader>
            <ModalContent>
              <Form
                as="form"
                id="nameForm"
                onSubmit={[Function]}
              >
                <FormInput
                  as={[Function]}
                  control={[Function]}
                  onChange={[Function]}
                  placeholder="Rover name"
                  required={true}
                />
              </Form>
            </ModalContent>
            <ModalActions>
              <Button
                as="button"
                form="nameForm"
                primary={true}
                type="submit"
              >
                Create
              </Button>
              <Button
                as="button"
                onClick={[Function]}
              >
                Cancel
              </Button>
            </ModalActions>
          </Modal>,
          <Loader
            active={true}
          />,
        ],
      },
      "ref": null,
      "rendered": Array [
        null,
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "centered": true,
            "children": Array [
              <ModalHeader>
                Enter the name of the rover
              </ModalHeader>,
              <ModalContent>
                <Form
                  as="form"
                  id="nameForm"
                  onSubmit={[Function]}
                >
                  <FormInput
                    as={[Function]}
                    control={[Function]}
                    onChange={[Function]}
                    placeholder="Rover name"
                    required={true}
                  />
                </Form>
              </ModalContent>,
              <ModalActions>
                <Button
                  as="button"
                  form="nameForm"
                  primary={true}
                  type="submit"
                >
                  Create
                </Button>
                <Button
                  as="button"
                  onClick={[Function]}
                >
                  Cancel
                </Button>
              </ModalActions>,
            ],
            "closeOnDimmerClick": true,
            "closeOnDocumentClick": false,
            "dimmer": true,
            "eventPool": "Modal",
            "onClose": [Function],
            "open": false,
            "trigger": <Button
              as="button"
              onClick={[Function]}
              primary={true}
              style={
                Object {
                  "marginLeft": "10px",
                }
              }
            >
              <Icon
                as="i"
                name="plus"
              />
              Register New Rover
            </Button>,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": "Enter the name of the rover",
              },
              "ref": null,
              "rendered": "Enter the name of the rover",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": <Form
                  as="form"
                  id="nameForm"
                  onSubmit={[Function]}
                >
                  <FormInput
                    as={[Function]}
                    control={[Function]}
                    onChange={[Function]}
                    placeholder="Rover name"
                    required={true}
                  />
                </Form>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "as": "form",
                  "children": <FormInput
                    as={[Function]}
                    control={[Function]}
                    onChange={[Function]}
                    placeholder="Rover name"
                    required={true}
                  />,
                  "id": "nameForm",
                  "onSubmit": [Function],
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "as": [Function],
                    "control": [Function],
                    "onChange": [Function],
                    "placeholder": "Rover name",
                    "required": true,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <Button
                    as="button"
                    form="nameForm"
                    primary={true}
                    type="submit"
                  >
                    Create
                  </Button>,
                  <Button
                    as="button"
                    onClick={[Function]}
                  >
                    Cancel
                  </Button>,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "as": "button",
                    "children": "Create",
                    "form": "nameForm",
                    "primary": true,
                    "type": "submit",
                  },
                  "ref": null,
                  "rendered": "Create",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "as": "button",
                    "children": "Cancel",
                    "onClick": [Function],
                  },
                  "ref": null,
                  "rendered": "Cancel",
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "active": true,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
