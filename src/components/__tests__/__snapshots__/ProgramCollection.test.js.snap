// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`The ProgramCollection component renders on the page with no errors 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ProgramCollection
    label="My Programs"
    onProgramClick={[MockFunction]}
    onRemoveClick={[MockFunction]}
    onUpdate={[MockFunction]}
    owned={true}
    programs={
      Object {
        "next": null,
        "previous": null,
        "results": Array [
          Object {
            "content": "<xml><variables></variables></xml>",
            "id": 33,
            "name": "Unnamed_Design_3",
            "user": Object {
              "username": "admin",
            },
          },
          Object {
            "content": "<xml><variables></variables></xml>",
            "id": 5,
            "name": "Unnamed_Design_2",
            "user": Object {
              "username": "testuser",
            },
          },
        ],
        "total_pages": 2,
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <Grid
          centered={true}
          columns={5}
        >
          <GridRow>
            <GridColumn />
            <GridColumn />
            <GridColumn>
              <Header
                as="h1"
                textAlign="center"
              >
                My Programs
              </Header>
            </GridColumn>
            <GridColumn
              textAlign="right"
            >
              <Input
                className="prompt"
                icon="search"
                onChange={[Function]}
                placeholder="Search..."
                type="text"
              />
            </GridColumn>
            <GridColumn>
              <Dropdown
                additionLabel="Add "
                additionPosition="top"
                button={true}
                className="icon"
                closeOnBlur={true}
                deburr={false}
                floating={true}
                icon="sort"
                labeled={true}
                minCharacters={1}
                noResultsMessage="No results found."
                openOnFocus={true}
                renderLabel={[Function]}
                searchInput="text"
                selectOnBlur={true}
                selectOnNavigation={true}
                text="Sort"
                wrapSelection={true}
              >
                <DropdownMenu>
                  <DropdownItem
                    name="name"
                    onClick={[Function]}
                  >
                    Name
                    <Icon
                      as="i"
                      name="caret down"
                    />
                  </DropdownItem>
                </DropdownMenu>
              </Dropdown>
            </GridColumn>
          </GridRow>
        </Grid>,
        <CardGroup
          centered={true}
        >
          <Card>
            <CardContent>
              <CardHeader>
                Unnamed_Design_3
              </CardHeader>
              <CardMeta>
                Mine
              </CardMeta>
            </CardContent>
            <CardContent
              extra={true}
            >
              <Button
                as="button"
                data-owned={true}
                id={33}
                onClick={[MockFunction]}
                primary={true}
              >
                Keep Working
              </Button>
              <Button
                as="button"
                floated="right"
                id={33}
                name="Unnamed_Design_3"
                negative={true}
                onClick={[MockFunction]}
              >
                Remove
              </Button>
            </CardContent>
          </Card>
          <Card>
            <CardContent>
              <CardHeader>
                Unnamed_Design_2
              </CardHeader>
              <CardMeta>
                Mine
              </CardMeta>
            </CardContent>
            <CardContent
              extra={true}
            >
              <Button
                as="button"
                data-owned={true}
                id={5}
                onClick={[MockFunction]}
                primary={true}
              >
                Keep Working
              </Button>
              <Button
                as="button"
                floated="right"
                id={5}
                name="Unnamed_Design_2"
                negative={true}
                onClick={[MockFunction]}
              >
                Remove
              </Button>
            </CardContent>
          </Card>
        </CardGroup>,
        <Grid
          centered={true}
        >
          <GridRow>
            <CustomPagination
              defaultActivePage={1}
              onPageChange={[Function]}
              totalPages={2}
            />
          </GridRow>
        </Grid>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "centered": true,
          "children": <GridRow>
            <GridColumn />
            <GridColumn />
            <GridColumn>
              <Header
                as="h1"
                textAlign="center"
              >
                My Programs
              </Header>
            </GridColumn>
            <GridColumn
              textAlign="right"
            >
              <Input
                className="prompt"
                icon="search"
                onChange={[Function]}
                placeholder="Search..."
                type="text"
              />
            </GridColumn>
            <GridColumn>
              <Dropdown
                additionLabel="Add "
                additionPosition="top"
                button={true}
                className="icon"
                closeOnBlur={true}
                deburr={false}
                floating={true}
                icon="sort"
                labeled={true}
                minCharacters={1}
                noResultsMessage="No results found."
                openOnFocus={true}
                renderLabel={[Function]}
                searchInput="text"
                selectOnBlur={true}
                selectOnNavigation={true}
                text="Sort"
                wrapSelection={true}
              >
                <DropdownMenu>
                  <DropdownItem
                    name="name"
                    onClick={[Function]}
                  >
                    Name
                    <Icon
                      as="i"
                      name="caret down"
                    />
                  </DropdownItem>
                </DropdownMenu>
              </Dropdown>
            </GridColumn>
          </GridRow>,
          "columns": 5,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <GridColumn />,
              <GridColumn />,
              <GridColumn>
                <Header
                  as="h1"
                  textAlign="center"
                >
                  My Programs
                </Header>
              </GridColumn>,
              <GridColumn
                textAlign="right"
              >
                <Input
                  className="prompt"
                  icon="search"
                  onChange={[Function]}
                  placeholder="Search..."
                  type="text"
                />
              </GridColumn>,
              <GridColumn>
                <Dropdown
                  additionLabel="Add "
                  additionPosition="top"
                  button={true}
                  className="icon"
                  closeOnBlur={true}
                  deburr={false}
                  floating={true}
                  icon="sort"
                  labeled={true}
                  minCharacters={1}
                  noResultsMessage="No results found."
                  openOnFocus={true}
                  renderLabel={[Function]}
                  searchInput="text"
                  selectOnBlur={true}
                  selectOnNavigation={true}
                  text="Sort"
                  wrapSelection={true}
                >
                  <DropdownMenu>
                    <DropdownItem
                      name="name"
                      onClick={[Function]}
                    >
                      Name
                      <Icon
                        as="i"
                        name="caret down"
                      />
                    </DropdownItem>
                  </DropdownMenu>
                </Dropdown>
              </GridColumn>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": <Header
                  as="h1"
                  textAlign="center"
                >
                  My Programs
                </Header>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "h1",
                  "children": "My Programs",
                  "textAlign": "center",
                },
                "ref": null,
                "rendered": "My Programs",
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": <Input
                  className="prompt"
                  icon="search"
                  onChange={[Function]}
                  placeholder="Search..."
                  type="text"
                />,
                "textAlign": "right",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "className": "prompt",
                  "icon": "search",
                  "onChange": [Function],
                  "placeholder": "Search...",
                  "type": "text",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": <Dropdown
                  additionLabel="Add "
                  additionPosition="top"
                  button={true}
                  className="icon"
                  closeOnBlur={true}
                  deburr={false}
                  floating={true}
                  icon="sort"
                  labeled={true}
                  minCharacters={1}
                  noResultsMessage="No results found."
                  openOnFocus={true}
                  renderLabel={[Function]}
                  searchInput="text"
                  selectOnBlur={true}
                  selectOnNavigation={true}
                  text="Sort"
                  wrapSelection={true}
                >
                  <DropdownMenu>
                    <DropdownItem
                      name="name"
                      onClick={[Function]}
                    >
                      Name
                      <Icon
                        as="i"
                        name="caret down"
                      />
                    </DropdownItem>
                  </DropdownMenu>
                </Dropdown>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "additionLabel": "Add ",
                  "additionPosition": "top",
                  "button": true,
                  "children": <DropdownMenu>
                    <DropdownItem
                      name="name"
                      onClick={[Function]}
                    >
                      Name
                      <Icon
                        as="i"
                        name="caret down"
                      />
                    </DropdownItem>
                  </DropdownMenu>,
                  "className": "icon",
                  "closeOnBlur": true,
                  "deburr": false,
                  "floating": true,
                  "icon": "sort",
                  "labeled": true,
                  "minCharacters": 1,
                  "noResultsMessage": "No results found.",
                  "openOnFocus": true,
                  "renderLabel": [Function],
                  "searchInput": "text",
                  "selectOnBlur": true,
                  "selectOnNavigation": true,
                  "text": "Sort",
                  "wrapSelection": true,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "children": <DropdownItem
                      name="name"
                      onClick={[Function]}
                    >
                      Name
                      <Icon
                        as="i"
                        name="caret down"
                      />
                    </DropdownItem>,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": Array [
                        "Name",
                        <Icon
                          as="i"
                          name="caret down"
                        />,
                      ],
                      "name": "name",
                      "onClick": [Function],
                    },
                    "ref": null,
                    "rendered": Array [
                      "Name",
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "as": "i",
                          "name": "caret down",
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                    ],
                    "type": [Function],
                  },
                  "type": [Function],
                },
                "type": [Function],
              },
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "centered": true,
          "children": Array [
            <Card>
              <CardContent>
                <CardHeader>
                  Unnamed_Design_3
                </CardHeader>
                <CardMeta>
                  Mine
                </CardMeta>
              </CardContent>
              <CardContent
                extra={true}
              >
                <Button
                  as="button"
                  data-owned={true}
                  id={33}
                  onClick={[MockFunction]}
                  primary={true}
                >
                  Keep Working
                </Button>
                <Button
                  as="button"
                  floated="right"
                  id={33}
                  name="Unnamed_Design_3"
                  negative={true}
                  onClick={[MockFunction]}
                >
                  Remove
                </Button>
              </CardContent>
            </Card>,
            <Card>
              <CardContent>
                <CardHeader>
                  Unnamed_Design_2
                </CardHeader>
                <CardMeta>
                  Mine
                </CardMeta>
              </CardContent>
              <CardContent
                extra={true}
              >
                <Button
                  as="button"
                  data-owned={true}
                  id={5}
                  onClick={[MockFunction]}
                  primary={true}
                >
                  Keep Working
                </Button>
                <Button
                  as="button"
                  floated="right"
                  id={5}
                  name="Unnamed_Design_2"
                  negative={true}
                  onClick={[MockFunction]}
                >
                  Remove
                </Button>
              </CardContent>
            </Card>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": "33",
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <CardContent>
                  <CardHeader>
                    Unnamed_Design_3
                  </CardHeader>
                  <CardMeta>
                    Mine
                  </CardMeta>
                </CardContent>,
                <CardContent
                  extra={true}
                >
                  <Button
                    as="button"
                    data-owned={true}
                    id={33}
                    onClick={[MockFunction]}
                    primary={true}
                  >
                    Keep Working
                  </Button>
                  <Button
                    as="button"
                    floated="right"
                    id={33}
                    name="Unnamed_Design_3"
                    negative={true}
                    onClick={[MockFunction]}
                  >
                    Remove
                  </Button>
                </CardContent>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": Array [
                    <CardHeader>
                      Unnamed_Design_3
                    </CardHeader>,
                    <CardMeta>
                      Mine
                    </CardMeta>,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "children": "Unnamed_Design_3",
                    },
                    "ref": null,
                    "rendered": "Unnamed_Design_3",
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "children": "Mine",
                    },
                    "ref": null,
                    "rendered": "Mine",
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": Array [
                    <Button
                      as="button"
                      data-owned={true}
                      id={33}
                      onClick={[MockFunction]}
                      primary={true}
                    >
                      Keep Working
                    </Button>,
                    <Button
                      as="button"
                      floated="right"
                      id={33}
                      name="Unnamed_Design_3"
                      negative={true}
                      onClick={[MockFunction]}
                    >
                      Remove
                    </Button>,
                  ],
                  "extra": true,
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "as": "button",
                      "children": "Keep Working",
                      "data-owned": true,
                      "id": 33,
                      "onClick": [MockFunction],
                      "primary": true,
                    },
                    "ref": null,
                    "rendered": "Keep Working",
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "as": "button",
                      "children": "Remove",
                      "floated": "right",
                      "id": 33,
                      "name": "Unnamed_Design_3",
                      "negative": true,
                      "onClick": [MockFunction],
                    },
                    "ref": null,
                    "rendered": "Remove",
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": "5",
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <CardContent>
                  <CardHeader>
                    Unnamed_Design_2
                  </CardHeader>
                  <CardMeta>
                    Mine
                  </CardMeta>
                </CardContent>,
                <CardContent
                  extra={true}
                >
                  <Button
                    as="button"
                    data-owned={true}
                    id={5}
                    onClick={[MockFunction]}
                    primary={true}
                  >
                    Keep Working
                  </Button>
                  <Button
                    as="button"
                    floated="right"
                    id={5}
                    name="Unnamed_Design_2"
                    negative={true}
                    onClick={[MockFunction]}
                  >
                    Remove
                  </Button>
                </CardContent>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": Array [
                    <CardHeader>
                      Unnamed_Design_2
                    </CardHeader>,
                    <CardMeta>
                      Mine
                    </CardMeta>,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "children": "Unnamed_Design_2",
                    },
                    "ref": null,
                    "rendered": "Unnamed_Design_2",
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "children": "Mine",
                    },
                    "ref": null,
                    "rendered": "Mine",
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": Array [
                    <Button
                      as="button"
                      data-owned={true}
                      id={5}
                      onClick={[MockFunction]}
                      primary={true}
                    >
                      Keep Working
                    </Button>,
                    <Button
                      as="button"
                      floated="right"
                      id={5}
                      name="Unnamed_Design_2"
                      negative={true}
                      onClick={[MockFunction]}
                    >
                      Remove
                    </Button>,
                  ],
                  "extra": true,
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "as": "button",
                      "children": "Keep Working",
                      "data-owned": true,
                      "id": 5,
                      "onClick": [MockFunction],
                      "primary": true,
                    },
                    "ref": null,
                    "rendered": "Keep Working",
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "as": "button",
                      "children": "Remove",
                      "floated": "right",
                      "id": 5,
                      "name": "Unnamed_Design_2",
                      "negative": true,
                      "onClick": [MockFunction],
                    },
                    "ref": null,
                    "rendered": "Remove",
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
            ],
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "centered": true,
          "children": <GridRow>
            <CustomPagination
              defaultActivePage={1}
              onPageChange={[Function]}
              totalPages={2}
            />
          </GridRow>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <CustomPagination
              defaultActivePage={1}
              onPageChange={[Function]}
              totalPages={2}
            />,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "defaultActivePage": 1,
              "onPageChange": [Function],
              "totalPages": 2,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
        "type": [Function],
      },
    ],
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <Grid
            centered={true}
            columns={5}
          >
            <GridRow>
              <GridColumn />
              <GridColumn />
              <GridColumn>
                <Header
                  as="h1"
                  textAlign="center"
                >
                  My Programs
                </Header>
              </GridColumn>
              <GridColumn
                textAlign="right"
              >
                <Input
                  className="prompt"
                  icon="search"
                  onChange={[Function]}
                  placeholder="Search..."
                  type="text"
                />
              </GridColumn>
              <GridColumn>
                <Dropdown
                  additionLabel="Add "
                  additionPosition="top"
                  button={true}
                  className="icon"
                  closeOnBlur={true}
                  deburr={false}
                  floating={true}
                  icon="sort"
                  labeled={true}
                  minCharacters={1}
                  noResultsMessage="No results found."
                  openOnFocus={true}
                  renderLabel={[Function]}
                  searchInput="text"
                  selectOnBlur={true}
                  selectOnNavigation={true}
                  text="Sort"
                  wrapSelection={true}
                >
                  <DropdownMenu>
                    <DropdownItem
                      name="name"
                      onClick={[Function]}
                    >
                      Name
                      <Icon
                        as="i"
                        name="caret down"
                      />
                    </DropdownItem>
                  </DropdownMenu>
                </Dropdown>
              </GridColumn>
            </GridRow>
          </Grid>,
          <CardGroup
            centered={true}
          >
            <Card>
              <CardContent>
                <CardHeader>
                  Unnamed_Design_3
                </CardHeader>
                <CardMeta>
                  Mine
                </CardMeta>
              </CardContent>
              <CardContent
                extra={true}
              >
                <Button
                  as="button"
                  data-owned={true}
                  id={33}
                  onClick={[MockFunction]}
                  primary={true}
                >
                  Keep Working
                </Button>
                <Button
                  as="button"
                  floated="right"
                  id={33}
                  name="Unnamed_Design_3"
                  negative={true}
                  onClick={[MockFunction]}
                >
                  Remove
                </Button>
              </CardContent>
            </Card>
            <Card>
              <CardContent>
                <CardHeader>
                  Unnamed_Design_2
                </CardHeader>
                <CardMeta>
                  Mine
                </CardMeta>
              </CardContent>
              <CardContent
                extra={true}
              >
                <Button
                  as="button"
                  data-owned={true}
                  id={5}
                  onClick={[MockFunction]}
                  primary={true}
                >
                  Keep Working
                </Button>
                <Button
                  as="button"
                  floated="right"
                  id={5}
                  name="Unnamed_Design_2"
                  negative={true}
                  onClick={[MockFunction]}
                >
                  Remove
                </Button>
              </CardContent>
            </Card>
          </CardGroup>,
          <Grid
            centered={true}
          >
            <GridRow>
              <CustomPagination
                defaultActivePage={1}
                onPageChange={[Function]}
                totalPages={2}
              />
            </GridRow>
          </Grid>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "centered": true,
            "children": <GridRow>
              <GridColumn />
              <GridColumn />
              <GridColumn>
                <Header
                  as="h1"
                  textAlign="center"
                >
                  My Programs
                </Header>
              </GridColumn>
              <GridColumn
                textAlign="right"
              >
                <Input
                  className="prompt"
                  icon="search"
                  onChange={[Function]}
                  placeholder="Search..."
                  type="text"
                />
              </GridColumn>
              <GridColumn>
                <Dropdown
                  additionLabel="Add "
                  additionPosition="top"
                  button={true}
                  className="icon"
                  closeOnBlur={true}
                  deburr={false}
                  floating={true}
                  icon="sort"
                  labeled={true}
                  minCharacters={1}
                  noResultsMessage="No results found."
                  openOnFocus={true}
                  renderLabel={[Function]}
                  searchInput="text"
                  selectOnBlur={true}
                  selectOnNavigation={true}
                  text="Sort"
                  wrapSelection={true}
                >
                  <DropdownMenu>
                    <DropdownItem
                      name="name"
                      onClick={[Function]}
                    >
                      Name
                      <Icon
                        as="i"
                        name="caret down"
                      />
                    </DropdownItem>
                  </DropdownMenu>
                </Dropdown>
              </GridColumn>
            </GridRow>,
            "columns": 5,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": Array [
                <GridColumn />,
                <GridColumn />,
                <GridColumn>
                  <Header
                    as="h1"
                    textAlign="center"
                  >
                    My Programs
                  </Header>
                </GridColumn>,
                <GridColumn
                  textAlign="right"
                >
                  <Input
                    className="prompt"
                    icon="search"
                    onChange={[Function]}
                    placeholder="Search..."
                    type="text"
                  />
                </GridColumn>,
                <GridColumn>
                  <Dropdown
                    additionLabel="Add "
                    additionPosition="top"
                    button={true}
                    className="icon"
                    closeOnBlur={true}
                    deburr={false}
                    floating={true}
                    icon="sort"
                    labeled={true}
                    minCharacters={1}
                    noResultsMessage="No results found."
                    openOnFocus={true}
                    renderLabel={[Function]}
                    searchInput="text"
                    selectOnBlur={true}
                    selectOnNavigation={true}
                    text="Sort"
                    wrapSelection={true}
                  >
                    <DropdownMenu>
                      <DropdownItem
                        name="name"
                        onClick={[Function]}
                      >
                        Name
                        <Icon
                          as="i"
                          name="caret down"
                        />
                      </DropdownItem>
                    </DropdownMenu>
                  </Dropdown>
                </GridColumn>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": <Header
                    as="h1"
                    textAlign="center"
                  >
                    My Programs
                  </Header>,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "as": "h1",
                    "children": "My Programs",
                    "textAlign": "center",
                  },
                  "ref": null,
                  "rendered": "My Programs",
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": <Input
                    className="prompt"
                    icon="search"
                    onChange={[Function]}
                    placeholder="Search..."
                    type="text"
                  />,
                  "textAlign": "right",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "className": "prompt",
                    "icon": "search",
                    "onChange": [Function],
                    "placeholder": "Search...",
                    "type": "text",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": <Dropdown
                    additionLabel="Add "
                    additionPosition="top"
                    button={true}
                    className="icon"
                    closeOnBlur={true}
                    deburr={false}
                    floating={true}
                    icon="sort"
                    labeled={true}
                    minCharacters={1}
                    noResultsMessage="No results found."
                    openOnFocus={true}
                    renderLabel={[Function]}
                    searchInput="text"
                    selectOnBlur={true}
                    selectOnNavigation={true}
                    text="Sort"
                    wrapSelection={true}
                  >
                    <DropdownMenu>
                      <DropdownItem
                        name="name"
                        onClick={[Function]}
                      >
                        Name
                        <Icon
                          as="i"
                          name="caret down"
                        />
                      </DropdownItem>
                    </DropdownMenu>
                  </Dropdown>,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "additionLabel": "Add ",
                    "additionPosition": "top",
                    "button": true,
                    "children": <DropdownMenu>
                      <DropdownItem
                        name="name"
                        onClick={[Function]}
                      >
                        Name
                        <Icon
                          as="i"
                          name="caret down"
                        />
                      </DropdownItem>
                    </DropdownMenu>,
                    "className": "icon",
                    "closeOnBlur": true,
                    "deburr": false,
                    "floating": true,
                    "icon": "sort",
                    "labeled": true,
                    "minCharacters": 1,
                    "noResultsMessage": "No results found.",
                    "openOnFocus": true,
                    "renderLabel": [Function],
                    "searchInput": "text",
                    "selectOnBlur": true,
                    "selectOnNavigation": true,
                    "text": "Sort",
                    "wrapSelection": true,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "children": <DropdownItem
                        name="name"
                        onClick={[Function]}
                      >
                        Name
                        <Icon
                          as="i"
                          name="caret down"
                        />
                      </DropdownItem>,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": Array [
                          "Name",
                          <Icon
                            as="i"
                            name="caret down"
                          />,
                        ],
                        "name": "name",
                        "onClick": [Function],
                      },
                      "ref": null,
                      "rendered": Array [
                        "Name",
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "class",
                          "props": Object {
                            "as": "i",
                            "name": "caret down",
                          },
                          "ref": null,
                          "rendered": null,
                          "type": [Function],
                        },
                      ],
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                  "type": [Function],
                },
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "centered": true,
            "children": Array [
              <Card>
                <CardContent>
                  <CardHeader>
                    Unnamed_Design_3
                  </CardHeader>
                  <CardMeta>
                    Mine
                  </CardMeta>
                </CardContent>
                <CardContent
                  extra={true}
                >
                  <Button
                    as="button"
                    data-owned={true}
                    id={33}
                    onClick={[MockFunction]}
                    primary={true}
                  >
                    Keep Working
                  </Button>
                  <Button
                    as="button"
                    floated="right"
                    id={33}
                    name="Unnamed_Design_3"
                    negative={true}
                    onClick={[MockFunction]}
                  >
                    Remove
                  </Button>
                </CardContent>
              </Card>,
              <Card>
                <CardContent>
                  <CardHeader>
                    Unnamed_Design_2
                  </CardHeader>
                  <CardMeta>
                    Mine
                  </CardMeta>
                </CardContent>
                <CardContent
                  extra={true}
                >
                  <Button
                    as="button"
                    data-owned={true}
                    id={5}
                    onClick={[MockFunction]}
                    primary={true}
                  >
                    Keep Working
                  </Button>
                  <Button
                    as="button"
                    floated="right"
                    id={5}
                    name="Unnamed_Design_2"
                    negative={true}
                    onClick={[MockFunction]}
                  >
                    Remove
                  </Button>
                </CardContent>
              </Card>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": "33",
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <CardContent>
                    <CardHeader>
                      Unnamed_Design_3
                    </CardHeader>
                    <CardMeta>
                      Mine
                    </CardMeta>
                  </CardContent>,
                  <CardContent
                    extra={true}
                  >
                    <Button
                      as="button"
                      data-owned={true}
                      id={33}
                      onClick={[MockFunction]}
                      primary={true}
                    >
                      Keep Working
                    </Button>
                    <Button
                      as="button"
                      floated="right"
                      id={33}
                      name="Unnamed_Design_3"
                      negative={true}
                      onClick={[MockFunction]}
                    >
                      Remove
                    </Button>
                  </CardContent>,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "children": Array [
                      <CardHeader>
                        Unnamed_Design_3
                      </CardHeader>,
                      <CardMeta>
                        Mine
                      </CardMeta>,
                    ],
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "children": "Unnamed_Design_3",
                      },
                      "ref": null,
                      "rendered": "Unnamed_Design_3",
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "children": "Mine",
                      },
                      "ref": null,
                      "rendered": "Mine",
                      "type": [Function],
                    },
                  ],
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "children": Array [
                      <Button
                        as="button"
                        data-owned={true}
                        id={33}
                        onClick={[MockFunction]}
                        primary={true}
                      >
                        Keep Working
                      </Button>,
                      <Button
                        as="button"
                        floated="right"
                        id={33}
                        name="Unnamed_Design_3"
                        negative={true}
                        onClick={[MockFunction]}
                      >
                        Remove
                      </Button>,
                    ],
                    "extra": true,
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "as": "button",
                        "children": "Keep Working",
                        "data-owned": true,
                        "id": 33,
                        "onClick": [MockFunction],
                        "primary": true,
                      },
                      "ref": null,
                      "rendered": "Keep Working",
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "as": "button",
                        "children": "Remove",
                        "floated": "right",
                        "id": 33,
                        "name": "Unnamed_Design_3",
                        "negative": true,
                        "onClick": [MockFunction],
                      },
                      "ref": null,
                      "rendered": "Remove",
                      "type": [Function],
                    },
                  ],
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": "5",
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <CardContent>
                    <CardHeader>
                      Unnamed_Design_2
                    </CardHeader>
                    <CardMeta>
                      Mine
                    </CardMeta>
                  </CardContent>,
                  <CardContent
                    extra={true}
                  >
                    <Button
                      as="button"
                      data-owned={true}
                      id={5}
                      onClick={[MockFunction]}
                      primary={true}
                    >
                      Keep Working
                    </Button>
                    <Button
                      as="button"
                      floated="right"
                      id={5}
                      name="Unnamed_Design_2"
                      negative={true}
                      onClick={[MockFunction]}
                    >
                      Remove
                    </Button>
                  </CardContent>,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "children": Array [
                      <CardHeader>
                        Unnamed_Design_2
                      </CardHeader>,
                      <CardMeta>
                        Mine
                      </CardMeta>,
                    ],
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "children": "Unnamed_Design_2",
                      },
                      "ref": null,
                      "rendered": "Unnamed_Design_2",
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "children": "Mine",
                      },
                      "ref": null,
                      "rendered": "Mine",
                      "type": [Function],
                    },
                  ],
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "children": Array [
                      <Button
                        as="button"
                        data-owned={true}
                        id={5}
                        onClick={[MockFunction]}
                        primary={true}
                      >
                        Keep Working
                      </Button>,
                      <Button
                        as="button"
                        floated="right"
                        id={5}
                        name="Unnamed_Design_2"
                        negative={true}
                        onClick={[MockFunction]}
                      >
                        Remove
                      </Button>,
                    ],
                    "extra": true,
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "as": "button",
                        "children": "Keep Working",
                        "data-owned": true,
                        "id": 5,
                        "onClick": [MockFunction],
                        "primary": true,
                      },
                      "ref": null,
                      "rendered": "Keep Working",
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "as": "button",
                        "children": "Remove",
                        "floated": "right",
                        "id": 5,
                        "name": "Unnamed_Design_2",
                        "negative": true,
                        "onClick": [MockFunction],
                      },
                      "ref": null,
                      "rendered": "Remove",
                      "type": [Function],
                    },
                  ],
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "centered": true,
            "children": <GridRow>
              <CustomPagination
                defaultActivePage={1}
                onPageChange={[Function]}
                totalPages={2}
              />
            </GridRow>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": <CustomPagination
                defaultActivePage={1}
                onPageChange={[Function]}
                totalPages={2}
              />,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "defaultActivePage": 1,
                "onPageChange": [Function],
                "totalPages": 2,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
          "type": [Function],
        },
      ],
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;
