// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`The RoverDetail component renders on the page with no errors 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <RoverDetail
    editRover={[MockFunction]}
    fetchRover={
      [MockFunction] {
        "calls": Array [
          Array [
            1,
          ],
        ],
        "results": Array [
          Object {
            "isThrow": false,
            "value": Promise {},
          },
        ],
      }
    }
    id={1}
    location={null}
    rover={
      Object {
        "client_id": "1234",
        "client_secret": "5678",
        "config": Object {
          "left_eye_port": 1,
          "right_eye_port": 2,
        },
        "id": 1,
        "name": "Sparky",
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "centered": true,
      "children": Array [
        <GridRow>
          <Header
            as="h1"
          >
            Rover Settings
          </Header>
        </GridRow>,
        <GridRow>
          <GridColumn
            width={4}
          >
            <React.Fragment>
              <GridRow
                style={
                  Object {
                    "paddingBottom": "10px",
                    "paddingTop": "10px",
                  }
                }
              >
                <Credential
                  rover={
                    Object {
                      "client_id": "1234",
                      "client_secret": "5678",
                      "config": Object {
                        "left_eye_port": 1,
                        "right_eye_port": 2,
                      },
                      "id": 1,
                      "name": "Sparky",
                    }
                  }
                />
              </GridRow>
              <GridRow>
                <Segment
                  raised={true}
                >
                  <Form
                    as="form"
                    loading={false}
                    onSubmit={[Function]}
                  >
                    <FormInput
                      as={[Function]}
                      control={[Function]}
                      defaultValue="Sparky"
                      inline={true}
                      label="Name:"
                      onChange={[Function]}
                      required={true}
                    />
                    <FormField
                      error={false}
                    >
                      <Accordion>
                        <AccordionTitle
                          active={false}
                          onClick={[Function]}
                        >
                          <Icon
                            as="i"
                            name="dropdown"
                          />
                          Advanced
                        </AccordionTitle>
                        <AccordionContent
                          active={false}
                        >
                          <TextArea
                            as="textarea"
                            defaultValue="{\\"left_eye_port\\":1,\\"right_eye_port\\":2}"
                            onChange={[Function]}
                            rows={3}
                          />
                        </AccordionContent>
                      </Accordion>
                    </FormField>
                    <FormButton
                      as={[Function]}
                      control={[Function]}
                      primary={true}
                    >
                      Save
                    </FormButton>
                  </Form>
                </Segment>
              </GridRow>
            </React.Fragment>
          </GridColumn>
        </GridRow>,
      ],
      "columns": 16,
      "divided": "vertically",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <Header
            as="h1"
          >
            Rover Settings
          </Header>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "as": "h1",
            "children": "Rover Settings",
          },
          "ref": null,
          "rendered": "Rover Settings",
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <GridColumn
            width={4}
          >
            <React.Fragment>
              <GridRow
                style={
                  Object {
                    "paddingBottom": "10px",
                    "paddingTop": "10px",
                  }
                }
              >
                <Credential
                  rover={
                    Object {
                      "client_id": "1234",
                      "client_secret": "5678",
                      "config": Object {
                        "left_eye_port": 1,
                        "right_eye_port": 2,
                      },
                      "id": 1,
                      "name": "Sparky",
                    }
                  }
                />
              </GridRow>
              <GridRow>
                <Segment
                  raised={true}
                >
                  <Form
                    as="form"
                    loading={false}
                    onSubmit={[Function]}
                  >
                    <FormInput
                      as={[Function]}
                      control={[Function]}
                      defaultValue="Sparky"
                      inline={true}
                      label="Name:"
                      onChange={[Function]}
                      required={true}
                    />
                    <FormField
                      error={false}
                    >
                      <Accordion>
                        <AccordionTitle
                          active={false}
                          onClick={[Function]}
                        >
                          <Icon
                            as="i"
                            name="dropdown"
                          />
                          Advanced
                        </AccordionTitle>
                        <AccordionContent
                          active={false}
                        >
                          <TextArea
                            as="textarea"
                            defaultValue="{\\"left_eye_port\\":1,\\"right_eye_port\\":2}"
                            onChange={[Function]}
                            rows={3}
                          />
                        </AccordionContent>
                      </Accordion>
                    </FormField>
                    <FormButton
                      as={[Function]}
                      control={[Function]}
                      primary={true}
                    >
                      Save
                    </FormButton>
                  </Form>
                </Segment>
              </GridRow>
            </React.Fragment>
          </GridColumn>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              null,
              null,
              null,
              <React.Fragment>
                <GridRow
                  style={
                    Object {
                      "paddingBottom": "10px",
                      "paddingTop": "10px",
                    }
                  }
                >
                  <Credential
                    rover={
                      Object {
                        "client_id": "1234",
                        "client_secret": "5678",
                        "config": Object {
                          "left_eye_port": 1,
                          "right_eye_port": 2,
                        },
                        "id": 1,
                        "name": "Sparky",
                      }
                    }
                  />
                </GridRow>
                <GridRow>
                  <Segment
                    raised={true}
                  >
                    <Form
                      as="form"
                      loading={false}
                      onSubmit={[Function]}
                    >
                      <FormInput
                        as={[Function]}
                        control={[Function]}
                        defaultValue="Sparky"
                        inline={true}
                        label="Name:"
                        onChange={[Function]}
                        required={true}
                      />
                      <FormField
                        error={false}
                      >
                        <Accordion>
                          <AccordionTitle
                            active={false}
                            onClick={[Function]}
                          >
                            <Icon
                              as="i"
                              name="dropdown"
                            />
                            Advanced
                          </AccordionTitle>
                          <AccordionContent
                            active={false}
                          >
                            <TextArea
                              as="textarea"
                              defaultValue="{\\"left_eye_port\\":1,\\"right_eye_port\\":2}"
                              onChange={[Function]}
                              rows={3}
                            />
                          </AccordionContent>
                        </Accordion>
                      </FormField>
                      <FormButton
                        as={[Function]}
                        control={[Function]}
                        primary={true}
                      >
                        Save
                      </FormButton>
                    </Form>
                  </Segment>
                </GridRow>
              </React.Fragment>,
            ],
            "width": 4,
          },
          "ref": null,
          "rendered": Array [
            null,
            null,
            null,
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": Array [
                  <GridRow
                    style={
                      Object {
                        "paddingBottom": "10px",
                        "paddingTop": "10px",
                      }
                    }
                  >
                    <Credential
                      rover={
                        Object {
                          "client_id": "1234",
                          "client_secret": "5678",
                          "config": Object {
                            "left_eye_port": 1,
                            "right_eye_port": 2,
                          },
                          "id": 1,
                          "name": "Sparky",
                        }
                      }
                    />
                  </GridRow>,
                  <GridRow>
                    <Segment
                      raised={true}
                    >
                      <Form
                        as="form"
                        loading={false}
                        onSubmit={[Function]}
                      >
                        <FormInput
                          as={[Function]}
                          control={[Function]}
                          defaultValue="Sparky"
                          inline={true}
                          label="Name:"
                          onChange={[Function]}
                          required={true}
                        />
                        <FormField
                          error={false}
                        >
                          <Accordion>
                            <AccordionTitle
                              active={false}
                              onClick={[Function]}
                            >
                              <Icon
                                as="i"
                                name="dropdown"
                              />
                              Advanced
                            </AccordionTitle>
                            <AccordionContent
                              active={false}
                            >
                              <TextArea
                                as="textarea"
                                defaultValue="{\\"left_eye_port\\":1,\\"right_eye_port\\":2}"
                                onChange={[Function]}
                                rows={3}
                              />
                            </AccordionContent>
                          </Accordion>
                        </FormField>
                        <FormButton
                          as={[Function]}
                          control={[Function]}
                          primary={true}
                        >
                          Save
                        </FormButton>
                      </Form>
                    </Segment>
                  </GridRow>,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "children": <Credential
                      rover={
                        Object {
                          "client_id": "1234",
                          "client_secret": "5678",
                          "config": Object {
                            "left_eye_port": 1,
                            "right_eye_port": 2,
                          },
                          "id": 1,
                          "name": "Sparky",
                        }
                      }
                    />,
                    "style": Object {
                      "paddingBottom": "10px",
                      "paddingTop": "10px",
                    },
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "rover": Object {
                        "client_id": "1234",
                        "client_secret": "5678",
                        "config": Object {
                          "left_eye_port": 1,
                          "right_eye_port": 2,
                        },
                        "id": 1,
                        "name": "Sparky",
                      },
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "children": <Segment
                      raised={true}
                    >
                      <Form
                        as="form"
                        loading={false}
                        onSubmit={[Function]}
                      >
                        <FormInput
                          as={[Function]}
                          control={[Function]}
                          defaultValue="Sparky"
                          inline={true}
                          label="Name:"
                          onChange={[Function]}
                          required={true}
                        />
                        <FormField
                          error={false}
                        >
                          <Accordion>
                            <AccordionTitle
                              active={false}
                              onClick={[Function]}
                            >
                              <Icon
                                as="i"
                                name="dropdown"
                              />
                              Advanced
                            </AccordionTitle>
                            <AccordionContent
                              active={false}
                            >
                              <TextArea
                                as="textarea"
                                defaultValue="{\\"left_eye_port\\":1,\\"right_eye_port\\":2}"
                                onChange={[Function]}
                                rows={3}
                              />
                            </AccordionContent>
                          </Accordion>
                        </FormField>
                        <FormButton
                          as={[Function]}
                          control={[Function]}
                          primary={true}
                        >
                          Save
                        </FormButton>
                      </Form>
                    </Segment>,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "children": <Form
                        as="form"
                        loading={false}
                        onSubmit={[Function]}
                      >
                        <FormInput
                          as={[Function]}
                          control={[Function]}
                          defaultValue="Sparky"
                          inline={true}
                          label="Name:"
                          onChange={[Function]}
                          required={true}
                        />
                        <FormField
                          error={false}
                        >
                          <Accordion>
                            <AccordionTitle
                              active={false}
                              onClick={[Function]}
                            >
                              <Icon
                                as="i"
                                name="dropdown"
                              />
                              Advanced
                            </AccordionTitle>
                            <AccordionContent
                              active={false}
                            >
                              <TextArea
                                as="textarea"
                                defaultValue="{\\"left_eye_port\\":1,\\"right_eye_port\\":2}"
                                onChange={[Function]}
                                rows={3}
                              />
                            </AccordionContent>
                          </Accordion>
                        </FormField>
                        <FormButton
                          as={[Function]}
                          control={[Function]}
                          primary={true}
                        >
                          Save
                        </FormButton>
                      </Form>,
                      "raised": true,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": "1",
                      "nodeType": "class",
                      "props": Object {
                        "as": "form",
                        "children": Array [
                          <FormInput
                            as={[Function]}
                            control={[Function]}
                            defaultValue="Sparky"
                            inline={true}
                            label="Name:"
                            onChange={[Function]}
                            required={true}
                          />,
                          <FormField
                            error={false}
                          >
                            <Accordion>
                              <AccordionTitle
                                active={false}
                                onClick={[Function]}
                              >
                                <Icon
                                  as="i"
                                  name="dropdown"
                                />
                                Advanced
                              </AccordionTitle>
                              <AccordionContent
                                active={false}
                              >
                                <TextArea
                                  as="textarea"
                                  defaultValue="{\\"left_eye_port\\":1,\\"right_eye_port\\":2}"
                                  onChange={[Function]}
                                  rows={3}
                                />
                              </AccordionContent>
                            </Accordion>
                          </FormField>,
                          <FormButton
                            as={[Function]}
                            control={[Function]}
                            primary={true}
                          >
                            Save
                          </FormButton>,
                        ],
                        "loading": false,
                        "onSubmit": [Function],
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "function",
                          "props": Object {
                            "as": [Function],
                            "control": [Function],
                            "defaultValue": "Sparky",
                            "inline": true,
                            "label": "Name:",
                            "onChange": [Function],
                            "required": true,
                          },
                          "ref": null,
                          "rendered": null,
                          "type": [Function],
                        },
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "function",
                          "props": Object {
                            "children": <Accordion>
                              <AccordionTitle
                                active={false}
                                onClick={[Function]}
                              >
                                <Icon
                                  as="i"
                                  name="dropdown"
                                />
                                Advanced
                              </AccordionTitle>
                              <AccordionContent
                                active={false}
                              >
                                <TextArea
                                  as="textarea"
                                  defaultValue="{\\"left_eye_port\\":1,\\"right_eye_port\\":2}"
                                  onChange={[Function]}
                                  rows={3}
                                />
                              </AccordionContent>
                            </Accordion>,
                            "error": false,
                          },
                          "ref": null,
                          "rendered": Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "function",
                            "props": Object {
                              "children": Array [
                                <AccordionTitle
                                  active={false}
                                  onClick={[Function]}
                                >
                                  <Icon
                                    as="i"
                                    name="dropdown"
                                  />
                                  Advanced
                                </AccordionTitle>,
                                <AccordionContent
                                  active={false}
                                >
                                  <TextArea
                                    as="textarea"
                                    defaultValue="{\\"left_eye_port\\":1,\\"right_eye_port\\":2}"
                                    onChange={[Function]}
                                    rows={3}
                                  />
                                </AccordionContent>,
                              ],
                            },
                            "ref": null,
                            "rendered": Array [
                              Object {
                                "instance": null,
                                "key": undefined,
                                "nodeType": "class",
                                "props": Object {
                                  "active": false,
                                  "children": Array [
                                    <Icon
                                      as="i"
                                      name="dropdown"
                                    />,
                                    "Advanced",
                                  ],
                                  "onClick": [Function],
                                },
                                "ref": null,
                                "rendered": Array [
                                  Object {
                                    "instance": null,
                                    "key": undefined,
                                    "nodeType": "class",
                                    "props": Object {
                                      "as": "i",
                                      "name": "dropdown",
                                    },
                                    "ref": null,
                                    "rendered": null,
                                    "type": [Function],
                                  },
                                  "Advanced",
                                ],
                                "type": [Function],
                              },
                              Object {
                                "instance": null,
                                "key": undefined,
                                "nodeType": "function",
                                "props": Object {
                                  "active": false,
                                  "children": <TextArea
                                    as="textarea"
                                    defaultValue="{\\"left_eye_port\\":1,\\"right_eye_port\\":2}"
                                    onChange={[Function]}
                                    rows={3}
                                  />,
                                },
                                "ref": null,
                                "rendered": Object {
                                  "instance": null,
                                  "key": undefined,
                                  "nodeType": "class",
                                  "props": Object {
                                    "as": "textarea",
                                    "defaultValue": "{\\"left_eye_port\\":1,\\"right_eye_port\\":2}",
                                    "onChange": [Function],
                                    "rows": 3,
                                  },
                                  "ref": null,
                                  "rendered": null,
                                  "type": [Function],
                                },
                                "type": [Function],
                              },
                            ],
                            "type": [Function],
                          },
                          "type": [Function],
                        },
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "function",
                          "props": Object {
                            "as": [Function],
                            "children": "Save",
                            "control": [Function],
                            "primary": true,
                          },
                          "ref": null,
                          "rendered": "Save",
                          "type": [Function],
                        },
                      ],
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                  "type": [Function],
                },
              ],
              "type": Symbol(react.fragment),
            },
          ],
          "type": [Function],
        },
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "centered": true,
        "children": Array [
          <GridRow>
            <Header
              as="h1"
            >
              Rover Settings
            </Header>
          </GridRow>,
          <GridRow>
            <GridColumn
              width={4}
            >
              <React.Fragment>
                <GridRow
                  style={
                    Object {
                      "paddingBottom": "10px",
                      "paddingTop": "10px",
                    }
                  }
                >
                  <Credential
                    rover={
                      Object {
                        "client_id": "1234",
                        "client_secret": "5678",
                        "config": Object {
                          "left_eye_port": 1,
                          "right_eye_port": 2,
                        },
                        "id": 1,
                        "name": "Sparky",
                      }
                    }
                  />
                </GridRow>
                <GridRow>
                  <Segment
                    raised={true}
                  >
                    <Form
                      as="form"
                      loading={false}
                      onSubmit={[Function]}
                    >
                      <FormInput
                        as={[Function]}
                        control={[Function]}
                        defaultValue="Sparky"
                        inline={true}
                        label="Name:"
                        onChange={[Function]}
                        required={true}
                      />
                      <FormField
                        error={false}
                      >
                        <Accordion>
                          <AccordionTitle
                            active={false}
                            onClick={[Function]}
                          >
                            <Icon
                              as="i"
                              name="dropdown"
                            />
                            Advanced
                          </AccordionTitle>
                          <AccordionContent
                            active={false}
                          >
                            <TextArea
                              as="textarea"
                              defaultValue="{\\"left_eye_port\\":1,\\"right_eye_port\\":2}"
                              onChange={[Function]}
                              rows={3}
                            />
                          </AccordionContent>
                        </Accordion>
                      </FormField>
                      <FormButton
                        as={[Function]}
                        control={[Function]}
                        primary={true}
                      >
                        Save
                      </FormButton>
                    </Form>
                  </Segment>
                </GridRow>
              </React.Fragment>
            </GridColumn>
          </GridRow>,
        ],
        "columns": 16,
        "divided": "vertically",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <Header
              as="h1"
            >
              Rover Settings
            </Header>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "as": "h1",
              "children": "Rover Settings",
            },
            "ref": null,
            "rendered": "Rover Settings",
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <GridColumn
              width={4}
            >
              <React.Fragment>
                <GridRow
                  style={
                    Object {
                      "paddingBottom": "10px",
                      "paddingTop": "10px",
                    }
                  }
                >
                  <Credential
                    rover={
                      Object {
                        "client_id": "1234",
                        "client_secret": "5678",
                        "config": Object {
                          "left_eye_port": 1,
                          "right_eye_port": 2,
                        },
                        "id": 1,
                        "name": "Sparky",
                      }
                    }
                  />
                </GridRow>
                <GridRow>
                  <Segment
                    raised={true}
                  >
                    <Form
                      as="form"
                      loading={false}
                      onSubmit={[Function]}
                    >
                      <FormInput
                        as={[Function]}
                        control={[Function]}
                        defaultValue="Sparky"
                        inline={true}
                        label="Name:"
                        onChange={[Function]}
                        required={true}
                      />
                      <FormField
                        error={false}
                      >
                        <Accordion>
                          <AccordionTitle
                            active={false}
                            onClick={[Function]}
                          >
                            <Icon
                              as="i"
                              name="dropdown"
                            />
                            Advanced
                          </AccordionTitle>
                          <AccordionContent
                            active={false}
                          >
                            <TextArea
                              as="textarea"
                              defaultValue="{\\"left_eye_port\\":1,\\"right_eye_port\\":2}"
                              onChange={[Function]}
                              rows={3}
                            />
                          </AccordionContent>
                        </Accordion>
                      </FormField>
                      <FormButton
                        as={[Function]}
                        control={[Function]}
                        primary={true}
                      >
                        Save
                      </FormButton>
                    </Form>
                  </Segment>
                </GridRow>
              </React.Fragment>
            </GridColumn>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": Array [
                null,
                null,
                null,
                <React.Fragment>
                  <GridRow
                    style={
                      Object {
                        "paddingBottom": "10px",
                        "paddingTop": "10px",
                      }
                    }
                  >
                    <Credential
                      rover={
                        Object {
                          "client_id": "1234",
                          "client_secret": "5678",
                          "config": Object {
                            "left_eye_port": 1,
                            "right_eye_port": 2,
                          },
                          "id": 1,
                          "name": "Sparky",
                        }
                      }
                    />
                  </GridRow>
                  <GridRow>
                    <Segment
                      raised={true}
                    >
                      <Form
                        as="form"
                        loading={false}
                        onSubmit={[Function]}
                      >
                        <FormInput
                          as={[Function]}
                          control={[Function]}
                          defaultValue="Sparky"
                          inline={true}
                          label="Name:"
                          onChange={[Function]}
                          required={true}
                        />
                        <FormField
                          error={false}
                        >
                          <Accordion>
                            <AccordionTitle
                              active={false}
                              onClick={[Function]}
                            >
                              <Icon
                                as="i"
                                name="dropdown"
                              />
                              Advanced
                            </AccordionTitle>
                            <AccordionContent
                              active={false}
                            >
                              <TextArea
                                as="textarea"
                                defaultValue="{\\"left_eye_port\\":1,\\"right_eye_port\\":2}"
                                onChange={[Function]}
                                rows={3}
                              />
                            </AccordionContent>
                          </Accordion>
                        </FormField>
                        <FormButton
                          as={[Function]}
                          control={[Function]}
                          primary={true}
                        >
                          Save
                        </FormButton>
                      </Form>
                    </Segment>
                  </GridRow>
                </React.Fragment>,
              ],
              "width": 4,
            },
            "ref": null,
            "rendered": Array [
              null,
              null,
              null,
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": Array [
                    <GridRow
                      style={
                        Object {
                          "paddingBottom": "10px",
                          "paddingTop": "10px",
                        }
                      }
                    >
                      <Credential
                        rover={
                          Object {
                            "client_id": "1234",
                            "client_secret": "5678",
                            "config": Object {
                              "left_eye_port": 1,
                              "right_eye_port": 2,
                            },
                            "id": 1,
                            "name": "Sparky",
                          }
                        }
                      />
                    </GridRow>,
                    <GridRow>
                      <Segment
                        raised={true}
                      >
                        <Form
                          as="form"
                          loading={false}
                          onSubmit={[Function]}
                        >
                          <FormInput
                            as={[Function]}
                            control={[Function]}
                            defaultValue="Sparky"
                            inline={true}
                            label="Name:"
                            onChange={[Function]}
                            required={true}
                          />
                          <FormField
                            error={false}
                          >
                            <Accordion>
                              <AccordionTitle
                                active={false}
                                onClick={[Function]}
                              >
                                <Icon
                                  as="i"
                                  name="dropdown"
                                />
                                Advanced
                              </AccordionTitle>
                              <AccordionContent
                                active={false}
                              >
                                <TextArea
                                  as="textarea"
                                  defaultValue="{\\"left_eye_port\\":1,\\"right_eye_port\\":2}"
                                  onChange={[Function]}
                                  rows={3}
                                />
                              </AccordionContent>
                            </Accordion>
                          </FormField>
                          <FormButton
                            as={[Function]}
                            control={[Function]}
                            primary={true}
                          >
                            Save
                          </FormButton>
                        </Form>
                      </Segment>
                    </GridRow>,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "children": <Credential
                        rover={
                          Object {
                            "client_id": "1234",
                            "client_secret": "5678",
                            "config": Object {
                              "left_eye_port": 1,
                              "right_eye_port": 2,
                            },
                            "id": 1,
                            "name": "Sparky",
                          }
                        }
                      />,
                      "style": Object {
                        "paddingBottom": "10px",
                        "paddingTop": "10px",
                      },
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "rover": Object {
                          "client_id": "1234",
                          "client_secret": "5678",
                          "config": Object {
                            "left_eye_port": 1,
                            "right_eye_port": 2,
                          },
                          "id": 1,
                          "name": "Sparky",
                        },
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "children": <Segment
                        raised={true}
                      >
                        <Form
                          as="form"
                          loading={false}
                          onSubmit={[Function]}
                        >
                          <FormInput
                            as={[Function]}
                            control={[Function]}
                            defaultValue="Sparky"
                            inline={true}
                            label="Name:"
                            onChange={[Function]}
                            required={true}
                          />
                          <FormField
                            error={false}
                          >
                            <Accordion>
                              <AccordionTitle
                                active={false}
                                onClick={[Function]}
                              >
                                <Icon
                                  as="i"
                                  name="dropdown"
                                />
                                Advanced
                              </AccordionTitle>
                              <AccordionContent
                                active={false}
                              >
                                <TextArea
                                  as="textarea"
                                  defaultValue="{\\"left_eye_port\\":1,\\"right_eye_port\\":2}"
                                  onChange={[Function]}
                                  rows={3}
                                />
                              </AccordionContent>
                            </Accordion>
                          </FormField>
                          <FormButton
                            as={[Function]}
                            control={[Function]}
                            primary={true}
                          >
                            Save
                          </FormButton>
                        </Form>
                      </Segment>,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "children": <Form
                          as="form"
                          loading={false}
                          onSubmit={[Function]}
                        >
                          <FormInput
                            as={[Function]}
                            control={[Function]}
                            defaultValue="Sparky"
                            inline={true}
                            label="Name:"
                            onChange={[Function]}
                            required={true}
                          />
                          <FormField
                            error={false}
                          >
                            <Accordion>
                              <AccordionTitle
                                active={false}
                                onClick={[Function]}
                              >
                                <Icon
                                  as="i"
                                  name="dropdown"
                                />
                                Advanced
                              </AccordionTitle>
                              <AccordionContent
                                active={false}
                              >
                                <TextArea
                                  as="textarea"
                                  defaultValue="{\\"left_eye_port\\":1,\\"right_eye_port\\":2}"
                                  onChange={[Function]}
                                  rows={3}
                                />
                              </AccordionContent>
                            </Accordion>
                          </FormField>
                          <FormButton
                            as={[Function]}
                            control={[Function]}
                            primary={true}
                          >
                            Save
                          </FormButton>
                        </Form>,
                        "raised": true,
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": "1",
                        "nodeType": "class",
                        "props": Object {
                          "as": "form",
                          "children": Array [
                            <FormInput
                              as={[Function]}
                              control={[Function]}
                              defaultValue="Sparky"
                              inline={true}
                              label="Name:"
                              onChange={[Function]}
                              required={true}
                            />,
                            <FormField
                              error={false}
                            >
                              <Accordion>
                                <AccordionTitle
                                  active={false}
                                  onClick={[Function]}
                                >
                                  <Icon
                                    as="i"
                                    name="dropdown"
                                  />
                                  Advanced
                                </AccordionTitle>
                                <AccordionContent
                                  active={false}
                                >
                                  <TextArea
                                    as="textarea"
                                    defaultValue="{\\"left_eye_port\\":1,\\"right_eye_port\\":2}"
                                    onChange={[Function]}
                                    rows={3}
                                  />
                                </AccordionContent>
                              </Accordion>
                            </FormField>,
                            <FormButton
                              as={[Function]}
                              control={[Function]}
                              primary={true}
                            >
                              Save
                            </FormButton>,
                          ],
                          "loading": false,
                          "onSubmit": [Function],
                        },
                        "ref": null,
                        "rendered": Array [
                          Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "function",
                            "props": Object {
                              "as": [Function],
                              "control": [Function],
                              "defaultValue": "Sparky",
                              "inline": true,
                              "label": "Name:",
                              "onChange": [Function],
                              "required": true,
                            },
                            "ref": null,
                            "rendered": null,
                            "type": [Function],
                          },
                          Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "function",
                            "props": Object {
                              "children": <Accordion>
                                <AccordionTitle
                                  active={false}
                                  onClick={[Function]}
                                >
                                  <Icon
                                    as="i"
                                    name="dropdown"
                                  />
                                  Advanced
                                </AccordionTitle>
                                <AccordionContent
                                  active={false}
                                >
                                  <TextArea
                                    as="textarea"
                                    defaultValue="{\\"left_eye_port\\":1,\\"right_eye_port\\":2}"
                                    onChange={[Function]}
                                    rows={3}
                                  />
                                </AccordionContent>
                              </Accordion>,
                              "error": false,
                            },
                            "ref": null,
                            "rendered": Object {
                              "instance": null,
                              "key": undefined,
                              "nodeType": "function",
                              "props": Object {
                                "children": Array [
                                  <AccordionTitle
                                    active={false}
                                    onClick={[Function]}
                                  >
                                    <Icon
                                      as="i"
                                      name="dropdown"
                                    />
                                    Advanced
                                  </AccordionTitle>,
                                  <AccordionContent
                                    active={false}
                                  >
                                    <TextArea
                                      as="textarea"
                                      defaultValue="{\\"left_eye_port\\":1,\\"right_eye_port\\":2}"
                                      onChange={[Function]}
                                      rows={3}
                                    />
                                  </AccordionContent>,
                                ],
                              },
                              "ref": null,
                              "rendered": Array [
                                Object {
                                  "instance": null,
                                  "key": undefined,
                                  "nodeType": "class",
                                  "props": Object {
                                    "active": false,
                                    "children": Array [
                                      <Icon
                                        as="i"
                                        name="dropdown"
                                      />,
                                      "Advanced",
                                    ],
                                    "onClick": [Function],
                                  },
                                  "ref": null,
                                  "rendered": Array [
                                    Object {
                                      "instance": null,
                                      "key": undefined,
                                      "nodeType": "class",
                                      "props": Object {
                                        "as": "i",
                                        "name": "dropdown",
                                      },
                                      "ref": null,
                                      "rendered": null,
                                      "type": [Function],
                                    },
                                    "Advanced",
                                  ],
                                  "type": [Function],
                                },
                                Object {
                                  "instance": null,
                                  "key": undefined,
                                  "nodeType": "function",
                                  "props": Object {
                                    "active": false,
                                    "children": <TextArea
                                      as="textarea"
                                      defaultValue="{\\"left_eye_port\\":1,\\"right_eye_port\\":2}"
                                      onChange={[Function]}
                                      rows={3}
                                    />,
                                  },
                                  "ref": null,
                                  "rendered": Object {
                                    "instance": null,
                                    "key": undefined,
                                    "nodeType": "class",
                                    "props": Object {
                                      "as": "textarea",
                                      "defaultValue": "{\\"left_eye_port\\":1,\\"right_eye_port\\":2}",
                                      "onChange": [Function],
                                      "rows": 3,
                                    },
                                    "ref": null,
                                    "rendered": null,
                                    "type": [Function],
                                  },
                                  "type": [Function],
                                },
                              ],
                              "type": [Function],
                            },
                            "type": [Function],
                          },
                          Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "function",
                            "props": Object {
                              "as": [Function],
                              "children": "Save",
                              "control": [Function],
                              "primary": true,
                            },
                            "ref": null,
                            "rendered": "Save",
                            "type": [Function],
                          },
                        ],
                        "type": [Function],
                      },
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                ],
                "type": Symbol(react.fragment),
              },
            ],
            "type": [Function],
          },
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
